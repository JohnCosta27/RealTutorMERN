[{"/home/johnc/Projects/RealTutorMERN/client/src/index.js":"1","/home/johnc/Projects/RealTutorMERN/client/src/theme.js":"2","/home/johnc/Projects/RealTutorMERN/client/src/reportWebVitals.js":"3","/home/johnc/Projects/RealTutorMERN/client/src/components/app/App.js":"4","/home/johnc/Projects/RealTutorMERN/client/src/components/pages/StudentDashboard.js":"5","/home/johnc/Projects/RealTutorMERN/client/src/components/general/CustomTextField.js":"6","/home/johnc/Projects/RealTutorMERN/client/src/components/general/LeftDrawer.js":"7","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/PlanLesson.js":"8","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/Dashboard.js":"9","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/AddReport.js":"10","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/Progress.js":"11","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/StudentLessons.js":"12","/home/johnc/Projects/RealTutorMERN/client/src/components/pages/Login.js":"13","/home/johnc/Projects/RealTutorMERN/client/src/components/general/Progress.js":"14","/home/johnc/Projects/RealTutorMERN/client/src/components/general/Lessons.js":"15","/home/johnc/Projects/RealTutorMERN/client/src/components/general/UpcomingLesson.js":"16","/home/johnc/Projects/RealTutorMERN/client/src/components/pages/TutorDashboard.js":"17","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/StudentList.js":"18","/home/johnc/Projects/RealTutorMERN/client/src/components/general/StudentCard.js":"19","/home/johnc/Projects/RealTutorMERN/client/src/components/general/BigLesson.js":"20","/home/johnc/Projects/RealTutorMERN/client/src/components/pages/MainPage.js":"21"},{"size":515,"mtime":1617974066350,"results":"22","hashOfConfig":"23"},{"size":829,"mtime":1618179911913,"results":"24","hashOfConfig":"23"},{"size":364,"mtime":1617974066356,"results":"25","hashOfConfig":"23"},{"size":895,"mtime":1618004983426,"results":"26","hashOfConfig":"23"},{"size":4894,"mtime":1618263477759,"results":"27","hashOfConfig":"23"},{"size":1372,"mtime":1618015538145,"results":"28","hashOfConfig":"23"},{"size":8497,"mtime":1618272959495,"results":"29","hashOfConfig":"23"},{"size":5533,"mtime":1618180736515,"results":"30","hashOfConfig":"23"},{"size":3973,"mtime":1618264567069,"results":"31","hashOfConfig":"23"},{"size":6260,"mtime":1618180816721,"results":"32","hashOfConfig":"23"},{"size":2469,"mtime":1618265442904,"results":"33","hashOfConfig":"23"},{"size":2921,"mtime":1618180215436,"results":"34","hashOfConfig":"23"},{"size":2834,"mtime":1618015509105,"results":"35","hashOfConfig":"23"},{"size":1102,"mtime":1617974066258,"results":"36","hashOfConfig":"23"},{"size":1073,"mtime":1617974066252,"results":"37","hashOfConfig":"23"},{"size":1427,"mtime":1617976065744,"results":"38","hashOfConfig":"23"},{"size":3841,"mtime":1618182401703,"results":"39","hashOfConfig":"23"},{"size":1319,"mtime":1617974066207,"results":"40","hashOfConfig":"23"},{"size":745,"mtime":1617974066289,"results":"41","hashOfConfig":"23"},{"size":2524,"mtime":1617976558702,"results":"42","hashOfConfig":"23"},{"size":3525,"mtime":1618160257891,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"32lu3r",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"/home/johnc/Projects/RealTutorMERN/client/src/index.js",[],["99","100"],"/home/johnc/Projects/RealTutorMERN/client/src/theme.js",["101","102","103","104"],"import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { grey, teal, deepOrange, deepPurple, green, cyan } from \"@material-ui/core/colors\";\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900]\n    },\n    secondary: {\n      main: teal[500]\n    },\n    cards: \"#FFFFFF\",\n    divBackground: \"#009688\",\n    leftNav: \"#313131\",\n    lightText: \"#DDDDDD\",\n  },\n  typography: {\n    fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    h1: {\n      fontSize: \"4em\",\n      color: grey[900],\n    },\n    h3: {\n      fontWeight: \"lighter\",\n    },\n    body2: {\n      fontWeight: \"lighter\",\n      fontSize: \"16px\"\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    }\n  }\n});\nexport default theme;\n","/home/johnc/Projects/RealTutorMERN/client/src/reportWebVitals.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/app/App.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/pages/StudentDashboard.js",["105","106","107","108","109","110","111"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport LeftDrawer from '../general/LeftDrawer';\n\nimport PlanLesson from '../FeatureComponents/PlanLesson';\nimport Dashboard from '../FeatureComponents/Dashboard';\nimport AddReport from '../FeatureComponents/AddReport';\nimport Progress from '../FeatureComponents/Progress';\nimport StudentLessons from '../FeatureComponents/StudentLessons';\n\nconst StudentDashboard = () => {\n\tconst queryString = window.location.search;\n\tconst urlParams = new URLSearchParams(queryString);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tstudentNameWrapper: {\n\t\t\tflex: 1,\n\t\t},\n\t\tstudentNameText: {\n\t\t\ttextAlign: 'center',\n\t\t},\n\t\tpaper: {\n\t\t\tmargin: 5,\n\t\t\ttextAlign: 'center',\n\t\t\theight: 350,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tcardsWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginLeft: '5%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardContent: {\n\t\t\tflex: 5,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardAction: {\n\t\t\twidth: '50%',\n\t\t\tmarginLeft: '25%',\n\t\t\tmarginBottom: 10,\n\t\t\tflex: 1,\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tbackgroundColor: theme.palette.background.default,\n\t\t\tpadding: theme.spacing(3),\n\t\t\tmarginTop: 50,\n\t\t},\n\t}));\n\n\tconst [auth, setAuth] = useState({ empty: true });\n\tconst [current, setCurrent] = useState(0);\n\tconst [name, setName] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tgetAuth();\n\t}, []);\n\n\tconst handleStateChange = (state) => {\n\t\tsetCurrent(state);\n\t};\n\n\tconst getAuth = async () => {\n\t\tconst response = await fetch('/accounts/auth', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t});\n\n\t\tconst data = await response.json();\n\n\t\tif (data.level == 1 && urlParams.get('studentid') != data.id) {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + data.id;\n\t\t} else if (data.level == 2) {\n\t\t\tconst checkTutor = await fetch(\n\t\t\t\t'/accounts/tutorstudent?studentid=' +\n\t\t\t\t\turlParams.get('studentid'),\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst checkTutorData = await checkTutor.json();\n\t\t\tif (checkTutorData.contains == false) {\n\t\t\t\tdocument.location.href = 'tutordashboard?tutorid=' + data.id;\n\t\t\t}\n\t\t}\n\n\t\tif (data.level == 1) {\n\t\t\tsetName(data.name);\n\t\t} else if (data.level >= 2) {\n\n\t\t\tconst getName = await fetch(\n\t\t\t\t'/accounts/getname?studentid=' +\n\t\t\t\t\turlParams.get('studentid'),\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst name = await getName.json();\n\t\t\tsetName(name.name);\n\n\t\t}\n\n\t\tsetAuth(data);\n\t};\n\n\tconst classes = useStyles();\n\n\tif (auth.level < 1) {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Typography variant=\"h1\">Back to the login</Typography>\n\t\t\t</div>\n\t\t);\n\t} else if (auth.level == 1) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LeftDrawer\n\t\t\t\t\tchangeState={handleStateChange}\n\t\t\t\t\tlevel={1}\n\t\t\t\t/>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<div className={classes.studentNameWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\">John Costa</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{current === 0 ? (\n\t\t\t\t\t\t<Dashboard level={auth.level} changeState={setCurrent} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 1 ? (\n\t\t\t\t\t\t<StudentLessons level={1} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 2 ? (\n\t\t\t\t\t\t<Progress level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 3 ? (\n\t\t\t\t\t\t<PlanLesson level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 4 ? (\n\t\t\t\t\t\t<AddReport level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (auth.level >= 2) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LeftDrawer\n\t\t\t\t\tchangeState={handleStateChange}\n\t\t\t\t\tlevel={2}\n\t\t\t\t/>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\n\t\t\t\t\t<div className={classes.studentNameWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\">{name}</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{current === 0 ? (\n\t\t\t\t\t\t<Dashboard level={auth.level} changeState={setCurrent} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 1 ? (\n\t\t\t\t\t\t<StudentLessons level={1} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 2 ? (\n\t\t\t\t\t\t<Progress level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 3 ? (\n\t\t\t\t\t\t<PlanLesson level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 4 ? (\n\t\t\t\t\t\t<AddReport level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n};\nexport default StudentDashboard;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/general/CustomTextField.js",["112"],"import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction CustomTextField(props) {\n  const useStyles = makeStyles((theme) => ({\n    customTextField: {\n      \"& .MuiInputBase-input\": {\n        color: theme.palette.cards,\n      },\n      \"& label\": {\n        color: theme.palette.cards,\n      },\n      \"& label.Mui-focused\": {\n        color: theme.palette.cards,\n      },\n      \"& .MuiInput-underline:after\": {\n        color: theme.palette.cards,\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: theme.palette.cards,\n        },\n        \"&:hover fieldset\": {\n          borderColor: theme.palette.cards,\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: theme.palette.cards,\n        },\n      },\n    },\n    multilineColor: {\n      color: theme.palette.cards,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <TextField\n      variant=\"filled\"\n      className={classes.customTextField}\n      label={props.label}\n      onChange={props.onChange}\n      error={props.error}\n      onFocus={props.onFocus}\n      color=\"secondary\"\n      InputProps={{\n        className: classes.multilineColor,\n      }}\n      type={props.type}\n    >\n      Hello there\n    </TextField>\n  );\n}\n\nexport default CustomTextField;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/general/LeftDrawer.js",["113","114","115","116"],"/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/PlanLesson.js",["117","118"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport Select from 'react-select';\n\nimport DateMomentUtils from '@date-io/date-fns';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nconst PlanLesson = () => {\n\tconst [selectedDate, handleDateChange] = useState(new Date());\n\tconst [points, setPoints] = useState([]);\n\tconst [title, setTitle] = useState('');\n\tconst [plan, setPlan] = useState('');\n\tconst [selectedPoints, setSelectedPoints] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetSpecPoints();\n\t}, []);\n\n\tconst getSpecPoints = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/spec/getspecfromstudentid?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != undefined) {\n\t\t\t//No authentication\n\t\t} else {\n\t\t\tlet formattedPoints = [];\n\t\t\tfor (let point of data) {\n\t\t\t\tformattedPoints.push({\n\t\t\t\t\tvalue: point._id,\n\t\t\t\t\tlabel: point.content,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetPoints(formattedPoints);\n\t\t}\n\t};\n\n\tconst submitLesson = async (event) => {\n\t\t//StudentID, TutorID, plan, specPoints, date\n\n\t\tsetClicked(true);\n\n\t\tevent.preventDefault();\n\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\t\tconst studentid = urlParams.get('studentid');\n\n\t\tconst response = await fetch('/accounts/getid', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t});\n\n\t\tconst data = await response.json();\n\t\tconst tutorid = data.id;\n\t\tconst date = Math.floor(new Date(selectedDate).getTime() / 1000);\n\n\t\tlet formattedpoints = [];\n\t\tfor (let p of selectedPoints) formattedpoints.push(p.value);\n\n\t\tconst body = {\n\t\t\ttitle: title,\n\t\t\tdate: date,\n\t\t\tplan: plan,\n\t\t\tstudentid: studentid,\n\t\t\ttutorid: tutorid,\n\t\t\tspecPoints: formattedpoints,\n\t\t};\n\t\tconsole.log(body);\n\n\t\tconst saveLesson = await fetch('/accounts/addlesson', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\tconst saveLessonResponse = await saveLesson.json();\n\n\t\tconsole.log(saveLessonResponse);\n\n\t\tif (saveLessonResponse.error != undefined) {\n\t\t\t//something?\n\t\t} else {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + studentid;\n\t\t}\n\t};\n\n\tconst planChange = (event) => {\n\t\tsetPlan(event.target.value);\n\t};\n\n\tconst titleChange = (event) => {\n\t\tsetTitle(event.target.value);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tlessonsWrapper: {\n\t\t\twidth: '90%',\n\t\t\theight: '95%',\n\t\t\tmarginLeft: '5%',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tmultiLineInput: {\n\t\t\twidth: '90%',\n\t\t\tleftMargin: '5%',\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tinputBox: {\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingTop: 10,\n\t\t\tpaddingBottom: 10,\n\t\t},\n\t\tgridItem: {\n\t\t\tmarginTop: 10,\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tbutton: {\n\t\t\twidth: '50%',\n\t\t},\n\t}));\n\n\tconst customTheme = (theme) => {\n\t\treturn {\n\t\t\t...theme,\n\t\t\tcolors: {\n\t\t\t\t...theme.colors,\n\t\t\t\tprimary: '#009688',\n\t\t\t\tprimary25: '#b2dfdb',\n\t\t\t\tprimary50: '#80cbc4',\n\t\t\t},\n\t\t};\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<form onSubmit={submitLesson}>\n\t\t\t<Grid container spacing={3} className={classes.lessonsWrapper}>\n\t\t\t\t<Grid item lg={8} md={12}>\n\t\t\t\t\t<Paper elevation={2} className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Lesson Title</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\t\tplaceholder=\"This is a title\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tonBlur={titleChange}\n\t\t\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Divider className={classes.gridItem} />\n\n\t\t\t\t\t\t<Typography variant=\"h2\">Lesson Planning</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Plan\"\n\t\t\t\t\t\t\tplaceholder=\"This is plan\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.multiLineInput}\n\t\t\t\t\t\t\tonBlur={planChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Divider />\n\n\t\t\t\t\t\t<Typography variant=\"h2\">Date and Time</Typography>\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateMomentUtils}>\n\t\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\n\t\t\t\t\t\t<Divider className={classes.gridItem} />\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tdisabled={clicked}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit plan\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={4} md={12}>\n\t\t\t\t\t<Paper className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tSelect planned spec points\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\toptions={points}\n\t\t\t\t\t\t\ttheme={customTheme}\n\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\tname=\"Specification points\"\n\t\t\t\t\t\t\tonChange={setSelectedPoints}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n};\n\nexport default PlanLesson;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/Dashboard.js",["119","120","121","122","123","124"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport Lesson from '../general/Lessons';\nimport Progress from '../general/Progress';\nimport UpcomingLesson from '../general/UpcomingLesson';\n\nconst StudentDashboard = (props) => {\n\tconst queryString = window.location.search;\n\tconst urlParams = new URLSearchParams(queryString);\n\n\tconst buttonVisibility = (level) => {\n\t\tif (props.level == 1) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: 'none',\n\t\t};\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tpaper: {\n\t\t\tmargin: 5,\n\t\t\ttextAlign: 'center',\n\t\t\theight: 350,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tcardsWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginLeft: '5%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardContent: {\n\t\t\tflex: 5,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardAction: {\n\t\t\twidth: '50%',\n\t\t\tmarginLeft: '25%',\n\t\t\tmarginBottom: 10,\n\t\t\tflex: 1,\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Card className={classes.paper}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Lessons</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<Lesson />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(4);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tprops.level == 1 ? { display: 'none' } : {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd report\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(1);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tView lessons\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Card className={classes.paper}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Upcoming</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<UpcomingLesson />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(3);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tprops.level == 1 ? { display: 'none' } : {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPlan lesson\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Card className={classes.paper}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Progress</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<Progress />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(2);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tView progress\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Card className={classes.paper}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Details</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}></Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tprops.level == 1 ? { display: 'none' } : {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEdit details\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default StudentDashboard;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/AddReport.js",["125","126","127","128","129","130"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ReactSelect from 'react-select';\n\nconst AddReport = () => {\n\tconst [lessons, setLessons] = useState([]);\n\tconst [selectedLesson, setSelectedLesson] = useState({ empty: true });\n\n\tconst [auth, setAuth] = useState({ empty: true });\n\tconst [points, setPoints] = useState([]);\n\tconst [report, setReport] = useState('');\n\tconst [selectedPoints, setSelectedPoints] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetSpecPoints();\n\t\tgetLessons();\n\t}, []);\n\n\tconst getSpecPoints = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/spec/getspecfromstudentid?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != undefined) {\n\t\t\t//something\n\t\t} else {\n\t\t\tlet formattedPoints = [];\n\t\t\tfor (let point of data) {\n\t\t\t\tformattedPoints.push({\n\t\t\t\t\tvalue: point._id,\n\t\t\t\t\tlabel: point.content,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetPoints(formattedPoints);\n\t\t}\n\t};\n\n\tconst getLessons = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/accounts/getstudentlessons?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tlet newData = [];\n\t\tfor (let lesson of data) {\n\t\t\tif (lesson.report == undefined) {\n\t\t\t\tnewData.push(lesson);\n\t\t\t}\n\t\t}\n\n\t\tsetLessons(newData);\n\t};\n\n\tconst submitLesson = async (event) => {\n\t\t//StudentID, TutorID, plan, specPoints, date\n\n\t\tsetClicked(true);\n\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\t\tconst studentid = urlParams.get('studentid');\n\n\t\tevent.preventDefault();\n\n\t\tlet formattedpoints = [];\n\t\tfor (let p of selectedPoints) formattedpoints.push(p.value);\n\n\t\tconst body = {\n\t\t\tlessonID: selectedLesson,\n\t\t\treport: report,\n\t\t\tspecPointsAchieved: formattedpoints,\n\t\t};\n\n\t\tconst saveLesson = await fetch('/accounts/addlessonreport', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\tconst saveLessonResponse = await saveLesson.json();\n\n\t\tif (saveLessonResponse.error != undefined) {\n\t\t\t//something?\n\t\t} else {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + studentid;\n\t\t}\n\t};\n\n\tconst reportChange = (event) => {\n\t\tsetReport(event.target.value);\n\t};\n\n\tconst lessonSelect = (event) => {\n\t\tsetSelectedLesson(event.target.value);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tlessonsWrapper: {\n\t\t\twidth: '90%',\n\t\t\theight: '95%',\n\t\t\tmarginLeft: '5%',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tmultiLineInput: {\n\t\t\twidth: '90%',\n\t\t\tleftMargin: '5%',\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tinputBox: {\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingTop: 10,\n\t\t\tpaddingBottom: 10,\n\t\t},\n\t\tgridItem: {\n\t\t\tmarginTop: 10,\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tbutton: {\n\t\t\twidth: '50%',\n\t\t},\n\t\tdropdown: {\n\t\t\twidth: '50%',\n\t\t},\n\t\tdivider: {\n\t\t\tmarginTop: 10,\n\t\t\tmarginBottom: 10,\n\t\t},\n\t}));\n\n\tconst customTheme = (theme) => {\n\t\treturn {\n\t\t\t...theme,\n\t\t\tcolors: {\n\t\t\t\t...theme.colors,\n\t\t\t\tprimary: '#009688',\n\t\t\t\tprimary25: '#b2dfdb',\n\t\t\t\tprimary50: '#80cbc4',\n\t\t\t},\n\t\t};\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<form onSubmit={submitLesson}>\n\t\t\t<Grid container spacing={3} className={classes.lessonsWrapper}>\n\t\t\t\t<Grid item lg={8} md={12}>\n\t\t\t\t\t<Paper elevation={2} className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Add report</Typography>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\n\t\t\t\t\t\t<Typography variant=\"h3\">Select lesson</Typography>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName={classes.dropdown}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InputLabel id=\"select-lesson\">\n\t\t\t\t\t\t\t\tSelect lesson\n\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"Select lesson\"\n\t\t\t\t\t\t\t\tid=\"lesson report\"\n\t\t\t\t\t\t\t\tlabelId=\"select-lesson\"\n\t\t\t\t\t\t\t\tvalue={selectedLesson.date}\n\t\t\t\t\t\t\t\tlabel=\"Select lesson\"\n\t\t\t\t\t\t\t\tonChange={lessonSelect}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{lessons.map((lesson) => (\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tkey={lesson._id}\n\t\t\t\t\t\t\t\t\t\tvalue={lesson._id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{new Date(\n\t\t\t\t\t\t\t\t\t\t\tlesson.date * 1000\n\t\t\t\t\t\t\t\t\t\t).toDateString()}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\n\t\t\t\t\t\t<Typography variant=\"h3\">Lesson Report</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Add lesson report\"\n\t\t\t\t\t\t\tplaceholder=\"Add lesson report\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.multiLineInput}\n\t\t\t\t\t\t\tonBlur={reportChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Divider className={classes.gridItem} />\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tdisabled={clicked}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit Report\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item lg={4} md={12}>\n\t\t\t\t\t<Paper className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tSelect achieved spec points\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<ReactSelect\n\t\t\t\t\t\t\toptions={points}\n\t\t\t\t\t\t\ttheme={customTheme}\n\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\tname=\"Specification points\"\n\t\t\t\t\t\t\tonChange={setSelectedPoints}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n};\n\nexport default AddReport;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/Progress.js",["131","132"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst Progress = () => {\n\tconst [rows, setRows] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetStudentPoints();\n\t}, []);\n\n\tconst getStudentPoints = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/accounts/getstudentpoints?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != undefined) {\n\t\t\t//Error handling later? Probably redirect.\n\t\t} else {\n\t\t\tlet dataRows = [];\n\t\t\tfor (let point of data) {\n\t\t\t\tdataRows.push(createData(point.content, point.date, point._id));\n\t\t\t}\n\t\t\tsetRows(dataRows);\n\t\t}\n\t};\n\n\tconst createData = (content, date, status) => {\n\t\treturn { content, date, status };\n\t};\n\n\tconst getStatus = (date) => {\n\t\t//2629800000 == 1 month\n\t\tif (new Date() - (date * 1000) < 2629800000) {\n\t\t\treturn \"Good\";\n\t\t} else {\n\t\t\treturn \"Needs revision\";\n\t\t}\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tstudentBoxWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginTop: 50,\n\t\t\tmarginLeft: '5%',\n\t\t},\n\t\tstudentBox: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Spec point</TableCell>\n\t\t\t\t\t\t<TableCell>Date Reviewed</TableCell>\n\t\t\t\t\t\t<TableCell>Status</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t\t<TableCell>{row.content}</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{new Date(row.date * 1000).toDateString(\n\t\t\t\t\t\t\t\t\t'en-UK'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{getStatus(row.date)}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n\nexport default Progress;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/StudentLessons.js",["133","134"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport BigLesson from '../general/BigLesson';\n\nconst StudentLessons = (props) => {\n\tconst [rows, setRows] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetLessons();\n\t}, []);\n\n\tconst getLessons = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tlet request = \"\";\n\t\tif (props.level == 1) {\n\t\t\trequest = '/accounts/getstudentlessons?studentid=' + await urlParams.get('studentid');\n\t\t} else if (props.level >= 2) {\n\t\t\trequest = '/accounts/gettutorlessons?tutorid=' + await urlParams.get('tutorid');\n\t\t}\n\n\t\tconst response = await fetch(request,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tconsole.log(data);\n\n\t\tlet lessons = [];\n\t\tfor (let lesson of data) {\n\t\t\tlet specPoints = [];\n\t\t\tfor (let point of lesson.specPoints) {\n\t\t\t\tspecPoints.push(point.content);\n\t\t\t}\n\n\t\t\tlet specPointsAchieved = [];\n\t\t\tfor (let point of lesson.specPointsAchieved) {\n\t\t\t\tspecPointsAchieved.push(point.content);\n\t\t\t}\n\n\t\t\tlessons.push(\n\t\t\t\tcreateData(\n\t\t\t\t\tlesson._id,\n\t\t\t\t\tlesson.title,\n\t\t\t\t\tlesson.plan,\n\t\t\t\t\tspecPoints,\n\t\t\t\t\tlesson.report,\n\t\t\t\t\tspecPointsAchieved,\n\t\t\t\t\tlesson.date\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tsetRows(lessons);\n\t};\n\n\tconst createData = (\n\t\t_id,\n\t\ttitle,\n\t\tplan,\n\t\tspecPoints,\n\t\treport,\n\t\tspecPointsAchieved,\n\t\tdate\n\t) => {\n\t\treturn {\n\t\t\t_id,\n\t\t\ttitle,\n\t\t\tplan,\n\t\t\tspecPoints,\n\t\t\treport,\n\t\t\tspecPointsAchieved,\n\t\t\tdate,\n\t\t};\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\ttable: {\n\t\t\tminWidth: 650,\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Title</TableCell>\n\t\t\t\t\t\t<TableCell>Specification Points</TableCell>\n\t\t\t\t\t\t<TableCell>Achieved Specification Points</TableCell>\n\t\t\t\t\t\t<TableCell style={{ width: 150 }}>Date</TableCell>\n\t\t\t\t\t\t<TableCell>Expand</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t<BigLesson\n\t\t\t\t\t\t\tid={row._id}\n\t\t\t\t\t\t\t_id={row._id}\n\t\t\t\t\t\t\ttitle={row.title}\n\t\t\t\t\t\t\tplan={row.plan}\n\t\t\t\t\t\t\tspecPoints={row.specPoints}\n\t\t\t\t\t\t\tspecPointsAchieved={row.specPointsAchieved}\n\t\t\t\t\t\t\treport={row.report}\n\t\t\t\t\t\t\tdate={row.date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n\nexport default StudentLessons;","/home/johnc/Projects/RealTutorMERN/client/src/components/pages/Login.js",["135","136"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport CustomTextField from \"../general/CustomTextField\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    leftNav: {\n      flex: 1,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minWidth: 400,\n    },\n    leftNavPaper: {\n      backgroundColor: theme.palette.leftNav,\n    },\n  }));\n\n  const submitLogin = async (event) => {\n    event.preventDefault();\n    const JSONdata = { email: email, password: password };\n\n    const response = await fetch(\"/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(JSONdata),\n    });\n\n    const data = await response.json();\n    console.log(data);\n\n    if (data.error != null) {\n      setError(true);\n      setEmail(\"\");\n      setPassword(\"\");\n    } else {\n      document.cookie = \"token=\" + data.cookie;\n\n      if (data.level == 1) {\n        document.location.href = \"studentdashboard?studentid=\" + data.id;\n      } else if (data.level == 2) {\n        document.location.href = \"tutordashboard?tutorid=\" + data.id;\n      }\n\n      //document.location.href = \"studentdashboard\";\n    }\n  };\n\n  const emailChange = (event) => {\n    setEmail(event.target.value);\n    setError(false);\n  };\n\n  const passwordChange = (event) => {\n    setError(false);\n    setPassword(event.target.value);\n  };\n\n  const setErrorFalse = () => setError(false);\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Paper className={classes.leftNavPaper} square>\n        <Box className={classes.leftNav}>\n          <form className=\"loginWrapper\">\n            <CustomTextField\n              label=\"Email\"\n              onChange={emailChange}\n              error={error}\n              onFocus={setErrorFalse}\n            />\n            <CustomTextField\n              label=\"Password\"\n              onChange={passwordChange}\n              error={error}\n              onFocus={setErrorFalse}\n              type=\"password\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              value=\"submit\"\n              onClick={submitLogin}\n            >\n              Login\n            </Button>\n          </form>\n        </Box>\n      </Paper>\n\n      <div className=\"mainWrapper\"></div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/general/Progress.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/general/Lessons.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/general/UpcomingLesson.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/pages/TutorDashboard.js",["137","138","139","140","141","142","143"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport LeftDrawer from '../general/LeftDrawer';\n\nimport PlanLesson from '../FeatureComponents/PlanLesson';\nimport StudentList from '../FeatureComponents/StudentList';\nimport AddReport from '../FeatureComponents/AddReport';\nimport Progress from '../FeatureComponents/Progress';\nimport StudentLessons from '../FeatureComponents/StudentLessons';\nimport BigLesson from '../general/BigLesson';\n\nconst StudentDashboard = () => {\n\tconst queryString = window.location.search;\n\tconst urlParams = new URLSearchParams(queryString);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tstudentNameWrapper: {\n\t\t\tflex: 1,\n\t\t},\n\t\tstudentNameText: {\n\t\t\ttextAlign: 'center',\n\t\t},\n\t\tpaper: {\n\t\t\tmargin: 5,\n\t\t\ttextAlign: 'center',\n\t\t\theight: 350,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tcardsWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginLeft: '5%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardContent: {\n\t\t\tflex: 5,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardAction: {\n\t\t\twidth: '50%',\n\t\t\tmarginLeft: '25%',\n\t\t\tmarginBottom: 10,\n\t\t\tflex: 1,\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tbackgroundColor: theme.palette.background.default,\n\t\t\tpadding: theme.spacing(3),\n\t\t\tmarginTop: 50,\n\t\t},\n\t\tcomponentWrapper: {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t},\n\t}));\n\n\tconst [auth, setAuth] = useState({ empty: true });\n\tconst [current, setCurrent] = useState(0);\n\tconst [name, setName] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tgetAuth();\n\t}, []);\n\n\tconst getAuth = async () => {\n\t\tconst response = await fetch('/accounts/auth', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t});\n\n\t\tconst data = await response.json();\n\t\tconsole.log(data);\n\n\t\tif (data.level == 2 && urlParams.get('tutorid') != data.id) {\n\t\t\tdocument.location.href = 'tutordashboard?tutorid=' + data.id;\n\t\t} else if (data.level == 1 && urlParams.get('studentid') != data.id) {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + data.id;\n\t\t}\n\n\t\tif (data.level == 2) {\n\t\t\tsetName(data.name);\n\t\t} else {\n\t\t\tconst getName = await fetch(\n\t\t\t\t'/accounts/getname?tutorid=' +\n\t\t\t\t\turlParams.get('tutorid'),\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst name = await getName.json();\n\t\t\tsetName(name.name);\n\t\t}\n\n\t\tsetAuth(data);\n\t};\n\n\tconst classes = useStyles();\n\n\tif (auth.level <= 1) {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Typography variant=\"h1\">Back to the login</Typography>\n\t\t\t</div>\n\t\t);\n\t} else if (auth.level >= 2) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LeftDrawer changeState={setCurrent} level={3} />\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<div className={classes.studentNameWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\">{name}</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<br></br>\n\n\t\t\t\t\t<div className={classes.componentWrapper}>\n\t\t\t\t\t\t{current === 0 ? (\n\t\t\t\t\t\t\t<StudentList level={auth.level} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{current === 1 ? (\n\t\t\t\t\t\t\t<StudentLessons level={2} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{current === 2 ? (\n\t\t\t\t\t\t\t<Progress level={auth.level} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{current === 3 ? (\n\t\t\t\t\t\t\t<PlanLesson level={auth.level} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{current === 4 ? (\n\t\t\t\t\t\t\t<AddReport level={auth.level} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n};\nexport default StudentDashboard;\n","/home/johnc/Projects/RealTutorMERN/client/src/components/FeatureComponents/StudentList.js",["144"],"import React, { useState, useEffect } from 'react';\nimport StudentCard from '../general/StudentCard';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst StudentList = (props) => {\n    \n    const [students, setStudents] = useState([]);\n    \n    useEffect(() => {\n        getTutorStudents();\n    }, []);\n    \n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    \n    const getTutorStudents = async () => {\n        \n        const response = await fetch(\"/accounts/gettutorstudents?tutorid=\" + urlParams.get('tutorid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        console.log(data);\n        \n        setStudents(data.students);\n        \n    }\n\n    const useStyles = makeStyles(theme => ({\n        studentListWrapper: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"50%\"\n        }\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.studentListWrapper}>\n        {students.map(student => (\n            <StudentCard firstname={student.firstname} surname={student.surname} id={student._id} />\n        ))}\n        </div>\n    );\n            \n}\n        \nexport default StudentList;","/home/johnc/Projects/RealTutorMERN/client/src/components/general/StudentCard.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/general/BigLesson.js",[],"/home/johnc/Projects/RealTutorMERN/client/src/components/pages/MainPage.js",["145","146","147","148"],"import React, { useState, useEffect } from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\n\nimport { teal } from '@material-ui/core/colors';\n\nconst MainPage = () => {\n\tconst [enter, setEnter] = useState(false);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tbanner: {\n\t\t\twidth: '100%',\n\t\t\theight: 800,\n\t\t\tbackgroundImage: `url(\"https://www.oxygenna.com/wp-content/uploads/2015/11/18.jpg\")`,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tposition: 'relative',\n\t\t},\n\t\tcenteredWrapper: {\n\t\t\twidth: '80%',\n\t\t\tmarginLeft: '10%',\n\t\t\tposition: 'absolute',\n\t\t\tbottom: 0,\n\t\t},\n\t\tbannerImage: {\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\tobjectFit: 'cover',\n\t\t},\n\t\tname: {\n\t\t\twidth: '80%',\n\t\t\tmarginLeft: '10%',\n\t\t\tmarginTop: 75,\n\t\t},\n\t\tbigText: {\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tfontSize: 50,\n\t\t\t},\n\t\t\t[theme.breakpoints.up('sm')]: {\n\t\t\t\tfontSize: 100,\n\t\t\t},\n\t\t},\n\t\tsectionWrapper: {\n\t\t\tbackgroundColor: '#fafafa',\n\t\t\twidth: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\theight: '100vh',\n\t\t},\n\t\tsectionPaper: {\n\t\t\twidth: '80%',\n\t\t\theight: '97.5%',\n\t\t\tmarginTop: '1.25%',\n\t\t\tmarginBottom: '1.25%',\n\t\t\tmarginLeft: '10%',\n\t\t\tmarginRight: '10%',\n\t\t\tdisplay: 'flex',\n\t\t\tpaddingTop: 20,\n\t\t\tpaddingLeft: 20,\n\t\t\tpaddingBottom: 20,\n\t\t\tpaddingRight: 20,\n\t\t},\n\t\tcard: {\n\t\t\twidth: '100%',\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\tuseEffect(() => {\n\t\thandleChange();\n\t\tsetTimeout(() => {\n\t\t\tsetEnter(true);\n\t\t}, 1000);\n\t}, []);\n\n\tconst [checked, setChecked] = React.useState(false);\n\n\tconst handleChange = () => {\n\t\tsetChecked((prev) => !prev);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<AppBar position=\"absolute\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tReal Tutor\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<div className={classes.banner}>\n\t\t\t\t<div className={classes.name}>\n\t\t\t\t\t<Typography variant=\"h1\" style={{ fontSize: 120 }}>\n\t\t\t\t\t\tA new approach to teaching\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t<Slide in={checked} timeout={1500} in={enter} direction=\"left\">\n\t\t\t\t\t<div className={classes.centeredWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\" className={classes.bigText}>\n\t\t\t\t\t\t\t£20 an hour\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h1\">\n\t\t\t\t\t\t\tThe future is online\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</Slide>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.sectionWrapper}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"https://i.imgur.com/bdZ8fF6.png\")`,\n\t\t\t\t\t\tbackgroundColor: '#FAFAFA',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.sectionPaper}>\n\t\t\t\t\t\t<div className={classes.card} style={{ flex: 5 }}>\n\t\t\t\t\t\t\t<Typography variant=\"h2\">\n\t\t\t\t\t\t\t\tOur goal is to provide seriously good and\n\t\t\t\t\t\t\t\taffordable tuition.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\tThis is some inspirational text to make\n\t\t\t\t\t\t\t\tcustomers feel like they want to have us and\n\t\t\t\t\t\t\t\tthat we are really coolk or something.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.sectionWrapper}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: teal[200],\n\t\t\t\t\t\tbackgroundImage: `url(\"https://i.imgur.com/bdZ8fF6.png\")`,\n\t\t\t\t\t\tbackgroundPositionY: \"-100vh\"\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":22,"nodeType":"155","messageId":"156","endLine":2,"endColumn":32},{"ruleId":"153","severity":1,"message":"157","line":2,"column":34,"nodeType":"155","messageId":"156","endLine":2,"endColumn":44},{"ruleId":"153","severity":1,"message":"158","line":2,"column":46,"nodeType":"155","messageId":"156","endLine":2,"endColumn":51},{"ruleId":"153","severity":1,"message":"159","line":2,"column":53,"nodeType":"155","messageId":"156","endLine":2,"endColumn":57},{"ruleId":"160","severity":1,"message":"161","line":67,"column":5,"nodeType":"162","endLine":67,"endColumn":7,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":85,"column":18,"nodeType":"166","messageId":"167","endLine":85,"endColumn":20},{"ruleId":"164","severity":1,"message":"168","line":85,"column":53,"nodeType":"166","messageId":"167","endLine":85,"endColumn":55},{"ruleId":"164","severity":1,"message":"165","line":87,"column":25,"nodeType":"166","messageId":"167","endLine":87,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":102,"column":32,"nodeType":"166","messageId":"167","endLine":102,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":107,"column":18,"nodeType":"166","messageId":"167","endLine":107,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":140,"column":24,"nodeType":"166","messageId":"167","endLine":140,"endColumn":26},{"ruleId":"153","severity":1,"message":"169","line":3,"column":22,"nodeType":"155","messageId":"156","endLine":3,"endColumn":36},{"ruleId":"153","severity":1,"message":"170","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":101,"column":18,"nodeType":"166","messageId":"167","endLine":101,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":182,"column":25,"nodeType":"166","messageId":"167","endLine":182,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":285,"column":25,"nodeType":"166","messageId":"167","endLine":285,"endColumn":27},{"ruleId":"164","severity":1,"message":"168","line":47,"column":18,"nodeType":"166","messageId":"167","endLine":47,"endColumn":20},{"ruleId":"164","severity":1,"message":"168","line":113,"column":32,"nodeType":"166","messageId":"167","endLine":113,"endColumn":34},{"ruleId":"153","severity":1,"message":"171","line":15,"column":8,"nodeType":"155","messageId":"156","endLine":15,"endColumn":17},{"ruleId":"153","severity":1,"message":"172","line":17,"column":8,"nodeType":"155","messageId":"156","endLine":17,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":18,"column":19,"nodeType":"166","messageId":"167","endLine":18,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":80,"column":22,"nodeType":"166","messageId":"167","endLine":80,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":115,"column":22,"nodeType":"166","messageId":"167","endLine":115,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":155,"column":22,"nodeType":"166","messageId":"167","endLine":155,"endColumn":24},{"ruleId":"153","severity":1,"message":"173","line":20,"column":9,"nodeType":"155","messageId":"156","endLine":20,"endColumn":13},{"ruleId":"153","severity":1,"message":"174","line":20,"column":15,"nodeType":"155","messageId":"156","endLine":20,"endColumn":22},{"ruleId":"164","severity":1,"message":"168","line":50,"column":18,"nodeType":"166","messageId":"167","endLine":50,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":86,"column":22,"nodeType":"166","messageId":"167","endLine":86,"endColumn":24},{"ruleId":"164","severity":1,"message":"168","line":126,"column":32,"nodeType":"166","messageId":"167","endLine":126,"endColumn":34},{"ruleId":"175","severity":1,"message":"176","line":209,"column":9,"nodeType":"177","endLine":209,"endColumn":32},{"ruleId":"160","severity":1,"message":"178","line":17,"column":5,"nodeType":"162","endLine":17,"endColumn":7,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"168","line":38,"column":18,"nodeType":"166","messageId":"167","endLine":38,"endColumn":20},{"ruleId":"160","severity":1,"message":"180","line":19,"column":5,"nodeType":"162","endLine":19,"endColumn":7,"suggestions":"181"},{"ruleId":"164","severity":1,"message":"165","line":26,"column":19,"nodeType":"166","messageId":"167","endLine":26,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":54,"column":22,"nodeType":"166","messageId":"167","endLine":54,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":56,"column":29,"nodeType":"166","messageId":"167","endLine":56,"endColumn":31},{"ruleId":"153","severity":1,"message":"182","line":11,"column":8,"nodeType":"155","messageId":"156","endLine":11,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":73,"column":5,"nodeType":"162","endLine":73,"endColumn":7,"suggestions":"183"},{"ruleId":"164","severity":1,"message":"165","line":88,"column":18,"nodeType":"166","messageId":"167","endLine":88,"endColumn":20},{"ruleId":"164","severity":1,"message":"168","line":88,"column":51,"nodeType":"166","messageId":"167","endLine":88,"endColumn":53},{"ruleId":"164","severity":1,"message":"165","line":90,"column":25,"nodeType":"166","messageId":"167","endLine":90,"endColumn":27},{"ruleId":"164","severity":1,"message":"168","line":90,"column":60,"nodeType":"166","messageId":"167","endLine":90,"endColumn":62},{"ruleId":"164","severity":1,"message":"165","line":94,"column":18,"nodeType":"166","messageId":"167","endLine":94,"endColumn":20},{"ruleId":"160","severity":1,"message":"184","line":12,"column":8,"nodeType":"162","endLine":12,"endColumn":10,"suggestions":"185"},{"ruleId":"153","severity":1,"message":"186","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":13},{"ruleId":"153","severity":1,"message":"187","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":12},{"ruleId":"153","severity":1,"message":"188","line":10,"column":8,"nodeType":"155","messageId":"156","endLine":10,"endColumn":12},{"ruleId":"175","severity":1,"message":"176","line":105,"column":40,"nodeType":"177","endLine":105,"endColumn":50},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'deepOrange' is defined but never used.","Identifier","unusedVar","'deepPurple' is defined but never used.","'green' is defined but never used.","'cyan' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAuth'. Either include it or remove the dependency array.","ArrayExpression",["191"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'createMuiTheme' is defined but never used.","'Divider' is defined but never used.","'urlParams' is assigned a value but never used.","'buttonVisibility' is assigned a value but never used.","'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'getStudentPoints'. Either include it or remove the dependency array.",["192"],"React Hook useEffect has a missing dependency: 'getLessons'. Either include it or remove the dependency array.",["193"],"'BigLesson' is defined but never used.",["194"],"React Hook useEffect has a missing dependency: 'getTutorStudents'. Either include it or remove the dependency array.",["195"],"'Paper' is defined but never used.","'Card' is defined but never used.","'Fade' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"196","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [getAuth]",{"range":"205","text":"206"},"Update the dependencies array to be: [getStudentPoints]",{"range":"207","text":"208"},"Update the dependencies array to be: [getLessons]",{"range":"209","text":"210"},{"range":"211","text":"206"},"Update the dependencies array to be: [getTutorStudents]",{"range":"212","text":"213"},[1574,1576],"[getAuth]",[582,584],"[getStudentPoints]",[634,636],"[getLessons]",[1725,1727],[309,311],"[getTutorStudents]"]