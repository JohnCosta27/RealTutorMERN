[{"/home/johnc/Code/RealTutorMERN/client/src/index.js":"1","/home/johnc/Code/RealTutorMERN/client/src/reportWebVitals.js":"2","/home/johnc/Code/RealTutorMERN/client/src/components/app/App.js":"3","/home/johnc/Code/RealTutorMERN/client/src/theme.js":"4","/home/johnc/Code/RealTutorMERN/client/src/components/pages/Login.js":"5","/home/johnc/Code/RealTutorMERN/client/src/components/pages/TutorDashboard.js":"6","/home/johnc/Code/RealTutorMERN/client/src/components/pages/StudentDashboard.js":"7","/home/johnc/Code/RealTutorMERN/client/src/components/pages/MainPage.js":"8","/home/johnc/Code/RealTutorMERN/client/src/components/pages/StripeTest.js":"9","/home/johnc/Code/RealTutorMERN/client/src/components/pages/SubjectPage.js":"10","/home/johnc/Code/RealTutorMERN/client/src/components/subjects/Alevelmaths.js":"11","/home/johnc/Code/RealTutorMERN/client/src/components/general/CustomTextField.js":"12","/home/johnc/Code/RealTutorMERN/client/src/components/general/LeftDrawer.js":"13","/home/johnc/Code/RealTutorMERN/client/src/components/general/BigLesson.js":"14","/home/johnc/Code/RealTutorMERN/client/src/components/general/TitleDescriptionCard.js":"15","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/StudentList.js":"16","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/PlanLesson.js":"17","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/AddReport.js":"18","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/StudentLessons.js":"19","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/Progress.js":"20","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/Dashboard.js":"21","/home/johnc/Code/RealTutorMERN/client/src/components/general/UpcomingLesson.js":"22","/home/johnc/Code/RealTutorMERN/client/src/components/general/Progress.js":"23","/home/johnc/Code/RealTutorMERN/client/src/components/general/Lessons.js":"24","/home/johnc/Code/RealTutorMERN/client/src/components/general/StudentCard.js":"25","/home/johnc/Code/RealTutorMERN/client/src/components/general/SubjectCard.js":"26","/home/johnc/Code/RealTutorMERN/client/src/components/general/DefaultAppBar.js":"27","/home/johnc/Code/RealTutorMERN/client/src/components/StyledComponents/Banner.js":"28"},{"size":510,"mtime":1620309275973,"results":"29","hashOfConfig":"30"},{"size":364,"mtime":1620309275973,"results":"31","hashOfConfig":"30"},{"size":1230,"mtime":1620425225081,"results":"32","hashOfConfig":"30"},{"size":804,"mtime":1620309275973,"results":"33","hashOfConfig":"30"},{"size":2953,"mtime":1620309386814,"results":"34","hashOfConfig":"30"},{"size":3431,"mtime":1620309275969,"results":"35","hashOfConfig":"30"},{"size":4696,"mtime":1620309275969,"results":"36","hashOfConfig":"30"},{"size":14886,"mtime":1620427377596,"results":"37","hashOfConfig":"30"},{"size":1145,"mtime":1620309275969,"results":"38","hashOfConfig":"30"},{"size":2309,"mtime":1620427735435,"results":"39","hashOfConfig":"30"},{"size":4586,"mtime":1620309275969,"results":"40","hashOfConfig":"30"},{"size":1372,"mtime":1620309275968,"results":"41","hashOfConfig":"30"},{"size":9190,"mtime":1620309275969,"results":"42","hashOfConfig":"30"},{"size":4134,"mtime":1620309275968,"results":"43","hashOfConfig":"30"},{"size":1349,"mtime":1620309275969,"results":"44","hashOfConfig":"30"},{"size":1388,"mtime":1620309275968,"results":"45","hashOfConfig":"30"},{"size":5668,"mtime":1620309275968,"results":"46","hashOfConfig":"30"},{"size":6626,"mtime":1620309275968,"results":"47","hashOfConfig":"30"},{"size":3903,"mtime":1620309275968,"results":"48","hashOfConfig":"30"},{"size":2469,"mtime":1620309275968,"results":"49","hashOfConfig":"30"},{"size":4385,"mtime":1620309275968,"results":"50","hashOfConfig":"30"},{"size":1427,"mtime":1620309275969,"results":"51","hashOfConfig":"30"},{"size":1102,"mtime":1620309275969,"results":"52","hashOfConfig":"30"},{"size":4524,"mtime":1620309275969,"results":"53","hashOfConfig":"30"},{"size":745,"mtime":1620309275969,"results":"54","hashOfConfig":"30"},{"size":887,"mtime":1620309275969,"results":"55","hashOfConfig":"30"},{"size":3567,"mtime":1620310125932,"results":"56","hashOfConfig":"30"},{"size":2459,"mtime":1620428640549,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"11u41fh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/johnc/Code/RealTutorMERN/client/src/index.js",[],["130","131"],"/home/johnc/Code/RealTutorMERN/client/src/reportWebVitals.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/app/App.js",[],"/home/johnc/Code/RealTutorMERN/client/src/theme.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/pages/Login.js",["132","133"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nimport CustomTextField from '../general/CustomTextField';\n\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nimport BannerBackground from '../../images/Banner.jpeg';\n\nfunction Login() {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [error, setError] = useState(false);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tleftNav: {\n\t\t\tflex: 1,\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\twidth: 400,\n\t\t\t[theme.breakpoints.down('xs')]: {\n\t\t\t\twidth: \"100%\"\n\t\t\t}\n\t\t},\n\t\tleftNavPaper: {\n\t\t\tbackgroundColor: theme.palette.leftNav,\n\t\t\twidth: 400,\n\t\t\t[theme.breakpoints.down('xs')]: {\n\t\t\t\twidth: \"100%\"\n\t\t\t}\n\t\t},\n\t\tmainWrapper: {\n\t\t\t\tflex: 4,\n\t\t\t\theight: \"100%\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\tbackgroundImage: `url(${BannerBackground})`,\n\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\tbackgroundPositionX: -700,\n\t\t\t\t[theme.breakpoints.down('xs')]: {\n\t\t\t\t\tflex: 0,\n\t\t\t\t\tmarginLeft: 0\n\t\t\t\t}\n\t\t}\n\t}));\n\n\tconst submitLogin = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst JSONdata = { email: email, password: password };\n\n\t\tconst response = await fetch('/accounts/login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(JSONdata),\n\t\t});\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != null) {\n\t\t\tsetError(true);\n\t\t\tsetEmail('');\n\t\t\tsetPassword('');\n\t\t} else {\n\t\t\tdocument.cookie = 'token=' + data.cookie;\n\n\t\t\tif (data.level == 1) {\n\t\t\t\tdocument.location.href =\n\t\t\t\t\t'studentdashboard?studentid=' + data.id;\n\t\t\t} else if (data.level == 2) {\n\t\t\t\tdocument.location.href = 'tutordashboard?tutorid=' + data.id;\n\t\t\t}\n\n\t\t}\n\t};\n\n\tconst emailChange = (event) => {\n\t\tsetEmail(event.target.value);\n\t\tsetError(false);\n\t};\n\n\tconst passwordChange = (event) => {\n\t\tsetError(false);\n\t\tsetPassword(event.target.value);\n\t};\n\n\tconst setErrorFalse = () => setError(false);\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Paper className={classes.leftNavPaper} square>\n\t\t\t\t<Box className={classes.leftNav}>\n\t\t\t\t\t<form className=\"loginWrapper\">\n\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\tonChange={emailChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tonFocus={setErrorFalse}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tonChange={passwordChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\tonFocus={setErrorFalse}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvalue=\"submit\"\n\t\t\t\t\t\t\tonClick={submitLogin}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Box>\n\t\t\t</Paper>\n\n\t\t\t<div className={classes.mainWrapper}></div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","/home/johnc/Code/RealTutorMERN/client/src/components/pages/TutorDashboard.js",["134","135","136","137","138","139","140","141","142","143"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport LeftDrawer from '../general/LeftDrawer';\n\nimport PlanLesson from '../FeatureComponents/PlanLesson';\nimport StudentList from '../FeatureComponents/StudentList';\nimport AddReport from '../FeatureComponents/AddReport';\nimport Progress from '../FeatureComponents/Progress';\nimport StudentLessons from '../FeatureComponents/StudentLessons';\nimport BigLesson from '../general/BigLesson';\n\nconst StudentDashboard = () => {\n\tconst queryString = window.location.search;\n\tconst urlParams = new URLSearchParams(queryString);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tstudentNameWrapper: {\n\t\t\tflex: 1,\n\t\t},\n\t\tstudentNameText: {\n\t\t\ttextAlign: 'center',\n\t\t},\n\t\tpaper: {\n\t\t\tmargin: 5,\n\t\t\ttextAlign: 'center',\n\t\t\theight: 350,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tcardsWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginLeft: '5%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardContent: {\n\t\t\tflex: 5,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardAction: {\n\t\t\twidth: '50%',\n\t\t\tmarginLeft: '25%',\n\t\t\tmarginBottom: 10,\n\t\t\tflex: 1,\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tbackgroundColor: theme.palette.background.default,\n\t\t\tpadding: theme.spacing(3),\n\t\t\tmarginTop: 50,\n\t\t},\n\t\tcomponentWrapper: {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t},\n\t}));\n\n\tconst [auth, setAuth] = useState({ empty: true });\n\tconst [current, setCurrent] = useState(0);\n\tconst [name, setName] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tgetAuth();\n\t}, []);\n\n\tconst getAuth = async () => {\n\t\tconst response = await fetch('/accounts/auth', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t});\n\n\t\tconst data = await response.json();\n\n\t\tif (data.level == 2 && urlParams.get('tutorid') != data.id) {\n\t\t\tdocument.location.href = 'tutordashboard?tutorid=' + data.id;\n\t\t} else if (data.level == 1 && urlParams.get('studentid') != data.id) {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + data.id;\n\t\t}\n\n\t\tif (data.level == 2) {\n\t\t\tsetName(data.name);\n\t\t} else {\n\t\t\tconst getName = await fetch(\n\t\t\t\t'/accounts/getname?tutorid=' +\n\t\t\t\t\turlParams.get('tutorid'),\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst name = await getName.json();\n\t\t\tsetName(name.name);\n\t\t}\n\n\t\tsetAuth(data);\n\t};\n\n\tconst classes = useStyles();\n\n\tif (auth.level <= 1) {\n\t\tdocument.location.href = \"/login\";\n\t} else if (auth.level >= 2) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LeftDrawer changeState={setCurrent} level={3} />\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<div className={classes.studentNameWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\">{name}</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<br></br>\n\n\t\t\t\t\t<div className={classes.componentWrapper}>\n\t\t\t\t\t\t{current === 0 ? (\n\t\t\t\t\t\t\t<StudentList level={auth.level} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{current === 1 ? (\n\t\t\t\t\t\t\t<StudentLessons level={2} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n};\nexport default StudentDashboard;\n","/home/johnc/Code/RealTutorMERN/client/src/components/pages/StudentDashboard.js",["144","145","146","147","148","149","150"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport LeftDrawer from '../general/LeftDrawer';\n\nimport PlanLesson from '../FeatureComponents/PlanLesson';\nimport Dashboard from '../FeatureComponents/Dashboard';\nimport AddReport from '../FeatureComponents/AddReport';\nimport Progress from '../FeatureComponents/Progress';\nimport StudentLessons from '../FeatureComponents/StudentLessons';\n\nconst StudentDashboard = () => {\n\tconst queryString = window.location.search;\n\tconst urlParams = new URLSearchParams(queryString);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tstudentNameWrapper: {\n\t\t\tflex: 1,\n\t\t},\n\t\tstudentNameText: {\n\t\t\ttextAlign: 'center',\n\t\t},\n\t\tpaper: {\n\t\t\tmargin: 5,\n\t\t\ttextAlign: 'center',\n\t\t\theight: 350,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tcardsWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginLeft: '5%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardContent: {\n\t\t\tflex: 5,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardAction: {\n\t\t\twidth: '50%',\n\t\t\tmarginLeft: '25%',\n\t\t\tmarginBottom: 10,\n\t\t\tflex: 1,\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tbackgroundColor: theme.palette.background.default,\n\t\t\tpadding: theme.spacing(3),\n\t\t\tmarginTop: 50,\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tpadding: 5,\n\t\t\t\tpaddingTop: 10\n\t\t\t}\n\t\t},\n\t}));\n\n\tconst [auth, setAuth] = useState({ empty: true });\n\tconst [current, setCurrent] = useState(0);\n\tconst [name, setName] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tgetAuth();\n\t}, []);\n\n\tconst handleStateChange = (state) => {\n\t\tsetCurrent(state);\n\t};\n\n\tconst getAuth = async () => {\n\t\tconst response = await fetch('/accounts/auth', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t});\n\n\t\tconst data = await response.json();\n\n\t\tif (data.level == 1 && urlParams.get('studentid') != data.id) {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + data.id;\n\t\t} else if (data.level == 2) {\n\t\t\tconst checkTutor = await fetch(\n\t\t\t\t'/accounts/tutorstudent?studentid=' +\n\t\t\t\t\turlParams.get('studentid'),\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst checkTutorData = await checkTutor.json();\n\t\t\tif (checkTutorData.contains == false) {\n\t\t\t\tdocument.location.href = 'tutordashboard?tutorid=' + data.id;\n\t\t\t}\n\t\t}\n\n\t\tif (data.level == 1) {\n\t\t\tsetName(data.name);\n\t\t} else if (data.level >= 2) {\n\n\t\t\tconst getName = await fetch(\n\t\t\t\t'/accounts/getname?studentid=' +\n\t\t\t\t\turlParams.get('studentid'),\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst name = await getName.json();\n\t\t\tsetName(name.name);\n\n\t\t}\n\n\t\tsetAuth(data);\n\t};\n\n\tconst classes = useStyles();\n\n\tif (auth.level < 1) {\n\t\tdocument.location.href = \"/login\";\n\t} else if (auth.level == 1) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LeftDrawer\n\t\t\t\t\tchangeState={handleStateChange}\n\t\t\t\t\tlevel={1}\n\t\t\t\t/>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<div className={classes.studentNameWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\">John Costa</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{current === 0 ? (\n\t\t\t\t\t\t<Dashboard level={auth.level} changeState={setCurrent} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 1 ? (\n\t\t\t\t\t\t<StudentLessons level={1} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 2 ? (\n\t\t\t\t\t\t<Progress level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (auth.level >= 2) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LeftDrawer\n\t\t\t\t\tchangeState={handleStateChange}\n\t\t\t\t\tlevel={2}\n\t\t\t\t/>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\n\t\t\t\t\t<div className={classes.studentNameWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h1\">{name}</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{current === 0 ? (\n\t\t\t\t\t\t<Dashboard level={auth.level} changeState={setCurrent} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 1 ? (\n\t\t\t\t\t\t<StudentLessons level={1} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 2 ? (\n\t\t\t\t\t\t<Progress level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 3 ? (\n\t\t\t\t\t\t<PlanLesson level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t\t{current === 4 ? (\n\t\t\t\t\t\t<AddReport level={auth.level} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n};\nexport default StudentDashboard;\n","/home/johnc/Code/RealTutorMERN/client/src/components/pages/MainPage.js",["151","152","153","154","155","156","157"],"/home/johnc/Code/RealTutorMERN/client/src/components/pages/StripeTest.js",["158"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {loadStripe} from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe(\n    'pk_test_51IgsTHJwHQjcU66C8y8UboR4W0HtFEJJTQGkCMe58M4fmu5JG4vd768Cfim2QrRPVd17QGJ4J0VrAJKqHsZCGV0e00O6cEg9Mi'\n);\n\nconst StripeTest = () => {\n\n    const [stripeError, setStripeError] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const handleClick = async () => {\n        setLoading(true);\n        const stripe = await stripePromise;\n        const {error} = await stripe.redirectToCheckout({\n            lineItems: [\n                {\n                    price: 'price_1IgsjzJwHQjcU66CAqzudVUI',\n                    quantity: 100\n                }\n            ],\n            mode: \"payment\",\n            cancelUrl: window.location.origin,\n            successUrl: `${window.location.origin}/login`,\n        });\n\n        if (error) {\n            setLoading(false);\n            setStripeError(error);\n        }\n\n    }\n\n\treturn (\n\t\t<div>\n\t\t\t<Button onClick={handleClick} disabled={loading}>Press to pay</Button>\n\t\t</div>\n\t);\n};\n\nexport default StripeTest;\n","/home/johnc/Code/RealTutorMERN/client/src/components/pages/SubjectPage.js",["159","160","161"],"/home/johnc/Code/RealTutorMERN/client/src/components/subjects/Alevelmaths.js",["162","163","164","165"],"import react from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport { teal, grey } from '@material-ui/core/colors';\n\nimport TitleDescriptionCard from '../general/TitleDescriptionCard';\n\nconst Alevelmaths = () => {\n\tconst useStyles = makeStyles((theme) => ({\n\t\tsectionWrapper: {\n\t\t\tbackgroundColor: '#fafafa',\n\t\t\twidth: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\theight: '100vh',\n\t\t},\n\t\tsectionPaper: {\n\t\t\twidth: '80%',\n\t\t\theight: '97.5%',\n\t\t\tmarginTop: '1.25%',\n\t\t\tmarginBottom: '1.25%',\n\t\t\tmarginLeft: '10%',\n\t\t\tmarginRight: '10%',\n\t\t\tdisplay: 'flex',\n\t\t\tpaddingTop: 20,\n\t\t\tpaddingLeft: 20,\n\t\t\tpaddingBottom: 20,\n\t\t\tpaddingRight: 20,\n\t\t},\n\t\tbanner: {\n\t\t\twidth: '100%',\n\t\t\theight: 800,\n\t\t\tbackgroundImage: `url(\"https://www.oxygenna.com/wp-content/uploads/2015/11/18.jpg\")`,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t},\n\t\tcardDisplay: {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'space-between',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tflexDirection: 'column',\n\t\t\t},\n\t\t},\n\t\tsmallSection: {\n\t\t\twidth: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\theight: 600,\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<AppBar position=\"absolute\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tReal Tutor\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<div className={classes.banner}>\n\t\t\t\t<Typography variant=\"h1\" align=\"center\">\n\t\t\t\t\tA-level Maths\n\t\t\t\t</Typography>\n\t\t\t\t<br></br>\n\t\t\t\t<Typography variant=\"h3\" align=\"center\">\n\t\t\t\t\tOne of the most important A-levels a student can take.\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div className={classes.smallSection}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.sectionPaper}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div style={{ maxWidth: 800 }}>\n\t\t\t\t\t\t<Typography variant=\"h1\">How we teach it</Typography>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\tThe only way you get better at maths is by doing\n\t\t\t\t\t\t\tmaths. Our Maths lessons are question based, which\n\t\t\t\t\t\t\tmeans as the student learns new content we actively\n\t\t\t\t\t\t\tshow them exam questions with topics they just\n\t\t\t\t\t\t\tlearnt, this way the student can get accustomed to\n\t\t\t\t\t\t\tthe type of questions as well as reinforcing their\n\t\t\t\t\t\t\tknowledge.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclassName={classes.smallSection}\n\t\t\t\tstyle={{ backgroundColor: teal[200] }}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.sectionPaper}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t<div style={{ maxWidth: 800, float: 'right' }}>\n\t\t\t\t\t\t\t<Typography variant=\"h1\" align=\"right\">\n\t\t\t\t\t\t\t\tReally Experienced Tutors\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Typography variant=\"body2\" align=\"right\">\n\t\t\t\t\t\t\t\tWe are all fairly young, which means we have gone through this process, we know what the exam papers are and we know exactly how to help you. We are not detached teachers who've taken their exams decades ago.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.smallSection} style={{backgroundColor: grey[200]}}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.sectionPaper}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div style={{ maxWidth: 800 }}>\n\t\t\t\t\t\t<Typography variant=\"h1\">How we teach it</Typography>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\tThe only way you get better at maths is by doing\n\t\t\t\t\t\t\tmaths. Our Maths lessons are question based, which\n\t\t\t\t\t\t\tmeans as the student learns new content we actively\n\t\t\t\t\t\t\tshow them exam questions with topics they just\n\t\t\t\t\t\t\tlearnt, this way the student can get accustomed to\n\t\t\t\t\t\t\tthe type of questions as well as reinforcing their\n\t\t\t\t\t\t\tknowledge.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.smallSection} style={{backgroundColor: teal[200]}}>\n\t\t\t\t<div className={classes.sectionPaper} style={{justifyContent: 'center'}}>\n\t\t\t\t\t<Typography variant=\"h1\">Contact us</Typography>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Alevelmaths;\n","/home/johnc/Code/RealTutorMERN/client/src/components/general/CustomTextField.js",["166"],"import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction CustomTextField(props) {\n  const useStyles = makeStyles((theme) => ({\n    customTextField: {\n      \"& .MuiInputBase-input\": {\n        color: theme.palette.cards,\n      },\n      \"& label\": {\n        color: theme.palette.cards,\n      },\n      \"& label.Mui-focused\": {\n        color: theme.palette.cards,\n      },\n      \"& .MuiInput-underline:after\": {\n        color: theme.palette.cards,\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: theme.palette.cards,\n        },\n        \"&:hover fieldset\": {\n          borderColor: theme.palette.cards,\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: theme.palette.cards,\n        },\n      },\n    },\n    multilineColor: {\n      color: theme.palette.cards,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <TextField\n      variant=\"filled\"\n      className={classes.customTextField}\n      label={props.label}\n      onChange={props.onChange}\n      error={props.error}\n      onFocus={props.onFocus}\n      color=\"secondary\"\n      InputProps={{\n        className: classes.multilineColor,\n      }}\n      type={props.type}\n    >\n      Hello there\n    </TextField>\n  );\n}\n\nexport default CustomTextField;\n","/home/johnc/Code/RealTutorMERN/client/src/components/general/LeftDrawer.js",["167","168","169","170","171"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport MenuBook from '@material-ui/icons/MenuBook';\nimport Home from '@material-ui/icons/Home';\nimport LessonIcon from '@material-ui/icons/FormatListBulleted';\n\nconst LeftDrawer = (props) => {\n\tlet openStart;\n\tif (window.innerWidth < 960) openStart = false;\n\telse openStart = true;\n\tconst [open, setOpen] = useState(openStart);\n\tconst [width, setWidth] = useState(window.innerWidth);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", () => setWidth(window.innerWidth));\n\t\tif (window.innerWidth >= 960) setOpen(true)\n\t}, []);\n\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst drawerWidth = 300;\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tleftNavWrapper: {\n\t\t\ttransition: theme.transitions.create('width', {\n\t\t\t\teasing: theme.transitions.easing.easeOut,\n\t\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t\t}),\n\t\t},\n\t\tleftNavPaper: {\n\t\t\tbackgroundColor: theme.palette.leftNav,\n\t\t\theight: '100%',\n\t\t\twidth: drawerWidth,\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: \"100%\"\n\t\t\t}\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t\tdrawer: {\n\t\t\twidth: drawerWidth,\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: \"100%\"\n\t\t\t},\n\t\t\tflexShrink: 0,\n\t\t\tzIndex: 10\n\t\t},\n\t\tdrawerPaper: {\n\t\t\twidth: drawerWidth,\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: \"100%\"\n\t\t\t},\n\t\t\tzIndex: 10\n\t\t},\n\t\ticon: {\n\t\t\tcolor: theme.palette.divBackground,\n\t\t},\n\t\ttext: {\n\t\t\tcolor: theme.palette.lightText,\n\t\t},\n\t\tappBar: {\n\t\t\ttransition: theme.transitions.create(['margin', 'width'], {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t\t}),\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t},\n\t\tappBarShift: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: 0\n\t\t\t},\n\t\t\tmarginLeft: drawerWidth,\n\t\t\ttransition: theme.transitions.create(['margin', 'width'], {\n\t\t\t\teasing: theme.transitions.easing.easeOut,\n\t\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t\t}),\n\t\t},\n\t\ttoolbar: {\n\t\t\toverflow: 'auto',\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(2),\n\t\t},\n\t\thide: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst handleClick = (state) => {\n\t\tif (width < 960) {\n\t\t\tsetOpen(false);\n\t\t}\n\t\tprops.changeState(state);\n\t}\n\n\t//Level 1 -> Student looking at student dashboard\n\t//Level 2 -> Tutor looking at student dashboard\n\t//Level 3 -> Tutor looking at tutor dashbgoard\n\n\tif (props.level == 1) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.leftNavWrapper}\n\t\t\t\tstyle={open ? { width: drawerWidth } : { width: 0 }}\n\t\t\t>\n\t\t\t\t<AppBar\n\t\t\t\t\tposition=\"fixed\"\n\t\t\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t\t\t\t[classes.appBarShift]: open,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<MenuIcon\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\t\t\topen && classes.hide\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\t\tReal Tutor\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Drawer\n\t\t\t\t\tclassName={classes.drawer}\n\t\t\t\t\tvariant=\"persistent\"\n\t\t\t\t\topen={open}\n\t\t\t\t\tanchor=\"left\"\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.drawerContainer}>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t\t\t{theme.direction === 'ltr' ? (\n\t\t\t\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<ChevronRightIcon />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={0}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(0)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Home color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'Dashboard'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(1)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LessonIcon color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'View lessons'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={2}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(2)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<AssessmentIcon color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'View progress'} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</div>\n\t\t\t\t</Drawer>\n\t\t\t</div>\n\t\t);\n\t} else if (props.level == 2) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.leftNavWrapper}\n\t\t\t\tstyle={open ? { width: drawerWidth } : { width: 0 }}\n\t\t\t>\n\t\t\t\t<AppBar\n\t\t\t\t\tposition=\"fixed\"\n\t\t\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t\t\t\t[classes.appBarShift]: open,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<MenuIcon\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\t\t\topen && classes.hide\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\t\tReal Tutor\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Drawer\n\t\t\t\t\tclassName={classes.drawer}\n\t\t\t\t\tvariant=\"persistent\"\n\t\t\t\t\topen={open}\n\t\t\t\t\tanchor=\"left\"\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.drawerContainer}>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t\t\t{theme.direction === 'ltr' ? (\n\t\t\t\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<ChevronRightIcon />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={0}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(0)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Home color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'Dashboard'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(1)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LessonIcon color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'View lessons'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={2}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(2)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<AssessmentIcon color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'View progress'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={3}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(3)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<AddIcon color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'Plan lesson'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={4}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(4)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<MenuBook color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'Add report'} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</div>\n\t\t\t\t</Drawer>\n\t\t\t</div>\n\t\t);\n\t} else if (props.level == 3) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.leftNavWrapper}\n\t\t\t\tstyle={open ? { width: drawerWidth } : { width: 0 }}\n\t\t\t>\n\t\t\t\t<AppBar\n\t\t\t\t\tposition=\"fixed\"\n\t\t\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t\t\t\t[classes.appBarShift]: open,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<MenuIcon\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\t\t\topen && classes.hide\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\t\tReal Tutor\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Drawer\n\t\t\t\t\tclassName={classes.drawer}\n\t\t\t\t\tvariant=\"persistent\"\n\t\t\t\t\topen={open}\n\t\t\t\t\tanchor=\"left\"\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.drawerContainer}>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t\t\t{theme.direction === 'ltr' ? (\n\t\t\t\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<ChevronRightIcon />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={0}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(0)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Home color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'Dashboard'} />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\t\t\tonClick={() => handleClick(1)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LessonIcon color=\"secondary\" />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={'View lessons'} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</div>\n\t\t\t\t</Drawer>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n};\n\nexport default LeftDrawer;\n","/home/johnc/Code/RealTutorMERN/client/src/components/general/BigLesson.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/general/TitleDescriptionCard.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/StudentList.js",["172"],"import React, { useState, useEffect } from \"react\";\nimport StudentCard from \"../general/StudentCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst StudentList = (props) => {\n  const [students, setStudents] = useState([]);\n\n  useEffect(() => {\n    getTutorStudents();\n  }, []);\n\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n\n  const getTutorStudents = async () => {\n    const response = await fetch(\n      \"/accounts/gettutorstudents?tutorid=\" + urlParams.get(\"tutorid\"),\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n      }\n    );\n\n    const data = await response.json();\n    console.log(data);\n\n    setStudents(data.students);\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    studentListWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"50%\",\n      [theme.breakpoints.down('sm')]: {\n        width: \"90%\"\n      }\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.studentListWrapper}>\n      {students.map((student) => (\n        <StudentCard\n          firstname={student.firstname}\n          surname={student.surname}\n          id={student._id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default StudentList;\n","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/PlanLesson.js",["173","174"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport Select from 'react-select';\n\nimport DateMomentUtils from '@date-io/date-fns';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nconst PlanLesson = () => {\n\tconst [selectedDate, handleDateChange] = useState(new Date());\n\tconst [points, setPoints] = useState([]);\n\tconst [title, setTitle] = useState('');\n\tconst [plan, setPlan] = useState('');\n\tconst [selectedPoints, setSelectedPoints] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetSpecPoints();\n\t}, []);\n\n\tconst getSpecPoints = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/spec/getspecfromstudentid?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != undefined) {\n\t\t\t//No authentication\n\t\t} else {\n\t\t\tlet formattedPoints = [];\n\t\t\tfor (let point of data) {\n\t\t\t\tformattedPoints.push({\n\t\t\t\t\tvalue: point._id,\n\t\t\t\t\tlabel: point.content,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetPoints(formattedPoints);\n\t\t}\n\t};\n\n\tconst submitLesson = async (event) => {\n\t\t//StudentID, TutorID, plan, specPoints, date\n\n\t\tsetClicked(true);\n\n\t\tevent.preventDefault();\n\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\t\tconst studentid = urlParams.get('studentid');\n\n\t\tconst response = await fetch('/accounts/getid', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t});\n\n\t\tconst data = await response.json();\n\t\tconst tutorid = data.id;\n\t\tconst date = Math.floor(new Date(selectedDate).getTime() / 1000);\n\n\t\tlet formattedpoints = [];\n\t\tfor (let p of selectedPoints) formattedpoints.push(p.value);\n\n\t\tconst body = {\n\t\t\ttitle: title,\n\t\t\tdate: date,\n\t\t\tplan: plan,\n\t\t\tstudentid: studentid,\n\t\t\ttutorid: tutorid,\n\t\t\tspecPoints: formattedpoints,\n\t\t};\n\t\tconsole.log(body);\n\n\t\tconst saveLesson = await fetch('/accounts/addlesson', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\tconst saveLessonResponse = await saveLesson.json();\n\n\t\tconsole.log(saveLessonResponse);\n\n\t\tif (saveLessonResponse.error != undefined) {\n\t\t\t//something?\n\t\t} else {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + studentid;\n\t\t}\n\t};\n\n\tconst planChange = (event) => {\n\t\tsetPlan(event.target.value);\n\t};\n\n\tconst titleChange = (event) => {\n\t\tsetTitle(event.target.value);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tlessonsWrapper: {\n\t\t\twidth: '90%',\n\t\t\theight: '95%',\n\t\t\tmarginLeft: '5%',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tmultiLineInput: {\n\t\t\twidth: '90%',\n\t\t\tleftMargin: '5%',\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tinputBox: {\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingTop: 10,\n\t\t\tpaddingBottom: 10,\n\t\t},\n\t\tgridItem: {\n\t\t\tmarginTop: 10,\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tbutton: {\n\t\t\twidth: '50%',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '90%'\n\t\t\t}\n\t\t},\n\t}));\n\n\tconst customTheme = (theme) => {\n\t\treturn {\n\t\t\t...theme,\n\t\t\tcolors: {\n\t\t\t\t...theme.colors,\n\t\t\t\tprimary: '#009688',\n\t\t\t\tprimary25: '#b2dfdb',\n\t\t\t\tprimary50: '#80cbc4',\n\t\t\t},\n\t\t};\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<form onSubmit={submitLesson}>\n\t\t\t<Grid container spacing={3} className={classes.lessonsWrapper}>\n\t\t\t\t<Grid item lg={8} md={12}>\n\t\t\t\t\t<Paper elevation={2} className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Lesson Title</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\t\tplaceholder=\"This is a title\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tonBlur={titleChange}\n\t\t\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Divider className={classes.gridItem} />\n\n\t\t\t\t\t\t<Typography variant=\"h2\">Lesson Planning</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Plan\"\n\t\t\t\t\t\t\tplaceholder=\"This is plan\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.multiLineInput}\n\t\t\t\t\t\t\tonBlur={planChange}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Divider />\n\n\t\t\t\t\t\t<Typography variant=\"h2\">Date and Time</Typography>\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateMomentUtils}>\n\t\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\n\t\t\t\t\t\t<Divider className={classes.gridItem} />\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tdisabled={clicked}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit plan\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={4} md={12}>\n\t\t\t\t\t<Paper className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tSelect planned spec points\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\toptions={points}\n\t\t\t\t\t\t\ttheme={customTheme}\n\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\tname=\"Specification points\"\n\t\t\t\t\t\t\tonChange={setSelectedPoints}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n};\n\nexport default PlanLesson;\n","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/AddReport.js",["175","176","177","178","179","180"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ReactSelect from 'react-select';\n\nconst AddReport = () => {\n\tconst [lessons, setLessons] = useState([]);\n\tconst [selectedLesson, setSelectedLesson] = useState({ empty: true });\n\n\tconst [auth, setAuth] = useState({ empty: true });\n\tconst [points, setPoints] = useState([]);\n\tconst [report, setReport] = useState('');\n\tconst [selectedPoints, setSelectedPoints] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetSpecPoints();\n\t\tgetLessons();\n\t}, []);\n\n\tconst getSpecPoints = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/spec/getspecfromstudentid?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != undefined) {\n\t\t\t//something\n\t\t} else {\n\t\t\tlet formattedPoints = [];\n\t\t\tfor (let point of data) {\n\t\t\t\tformattedPoints.push({\n\t\t\t\t\tvalue: point._id,\n\t\t\t\t\tlabel: point.content,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetPoints(formattedPoints);\n\t\t}\n\t};\n\n\tconst getLessons = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/accounts/getstudentlessons?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tlet newData = [];\n\t\tfor (let lesson of data) {\n\t\t\tif (lesson.report == undefined) {\n\t\t\t\tnewData.push(lesson);\n\t\t\t}\n\t\t}\n\n\t\tsetLessons(newData);\n\t};\n\n\tconst submitLesson = async (event) => {\n\t\t//StudentID, TutorID, plan, specPoints, date\n\n\t\tsetClicked(true);\n\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\t\tconst studentid = urlParams.get('studentid');\n\n\t\tevent.preventDefault();\n\n\t\tlet formattedpoints = [];\n\t\tfor (let p of selectedPoints) formattedpoints.push(p.value);\n\n\t\tconst body = {\n\t\t\tlessonID: selectedLesson,\n\t\t\treport: report,\n\t\t\tspecPointsAchieved: formattedpoints,\n\t\t};\n\n\t\tconst saveLesson = await fetch('/accounts/addlessonreport', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\tconst saveLessonResponse = await saveLesson.json();\n\n\t\tif (saveLessonResponse.error != undefined) {\n\t\t\t//something?\n\t\t} else {\n\t\t\tdocument.location.href = 'studentdashboard?studentid=' + studentid;\n\t\t}\n\t};\n\n\tconst reportChange = (event) => {\n\t\tsetReport(event.target.value);\n\t};\n\n\tconst lessonSelect = (event) => {\n\t\tsetSelectedLesson(event.target.value);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tlessonsWrapper: {\n\t\t\twidth: '90%',\n\t\t\theight: '95%',\n\t\t\tmarginLeft: '5%',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '100%',\n\t\t\t\tmarginLeft: '0%'\n\t\t\t}\n\t\t},\n\t\tmultiLineInput: {\n\t\t\twidth: '90%',\n\t\t\tleftMargin: '5%',\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tinputBox: {\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingTop: 10,\n\t\t\tpaddingBottom: 10,\n\t\t},\n\t\tgridItem: {\n\t\t\tmarginTop: 10,\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tbutton: {\n\t\t\twidth: '50%',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '100%'\n\t\t\t}\n\t\t},\n\t\tdropdown: {\n\t\t\twidth: '50%',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '100%'\n\t\t\t}\n\t\t},\n\t\tdivider: {\n\t\t\tmarginTop: 10,\n\t\t\tmarginBottom: 10,\n\t\t},\n\t\tformWrapper: {\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '100%'\n\t\t\t}\n\t\t}\n\t}));\n\n\tconst customTheme = (theme) => {\n\t\treturn {\n\t\t\t...theme,\n\t\t\tcolors: {\n\t\t\t\t...theme.colors,\n\t\t\t\tprimary: '#009688',\n\t\t\t\tprimary25: '#b2dfdb',\n\t\t\t\tprimary50: '#80cbc4',\n\t\t\t},\n\t\t};\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<form onSubmit={submitLesson}>\n\t\t\t<Grid container spacing={3} className={classes.lessonsWrapper}>\n\t\t\t\t<Grid item lg={8} md={12} className={classes.formWrapper}>\n\t\t\t\t\t<Paper elevation={2} className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Add report</Typography>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\n\t\t\t\t\t\t<Typography variant=\"h3\">Select lesson</Typography>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName={classes.dropdown}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InputLabel id=\"select-lesson\">\n\t\t\t\t\t\t\t\tSelect lesson\n\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"Select lesson\"\n\t\t\t\t\t\t\t\tid=\"lesson report\"\n\t\t\t\t\t\t\t\tlabelId=\"select-lesson\"\n\t\t\t\t\t\t\t\tvalue={selectedLesson.date}\n\t\t\t\t\t\t\t\tlabel=\"Select lesson\"\n\t\t\t\t\t\t\t\tonChange={lessonSelect}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{lessons.map((lesson) => (\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tkey={lesson._id}\n\t\t\t\t\t\t\t\t\t\tvalue={lesson._id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{new Date(\n\t\t\t\t\t\t\t\t\t\t\tlesson.date * 1000\n\t\t\t\t\t\t\t\t\t\t).toDateString()}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\n\t\t\t\t\t\t<Typography variant=\"h3\">Lesson Report</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Add lesson report\"\n\t\t\t\t\t\t\tplaceholder=\"Add lesson report\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.multiLineInput}\n\t\t\t\t\t\t\tonBlur={reportChange}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Divider className={classes.gridItem} />\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tdisabled={clicked}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit Report\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item lg={4} md={12}>\n\t\t\t\t\t<Paper className={classes.inputBox}>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tSelect achieved spec points\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<ReactSelect\n\t\t\t\t\t\t\toptions={points}\n\t\t\t\t\t\t\ttheme={customTheme}\n\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\tname=\"Specification points\"\n\t\t\t\t\t\t\tonChange={setSelectedPoints}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n};\n\nexport default AddReport;\n","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/StudentLessons.js",["181","182"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport BigLesson from '../general/BigLesson';\n\nconst StudentLessons = (props) => {\n\tconst [rows, setRows] = useState([]);\n\tconst [width, setWidth] = useState(window.innerWidth);\n\n\tuseEffect(() => {\n\t\tgetLessons();\n\t\twindow.addEventListener(\"resize\", () => setWidth(window.innerWidth));\n\t}, []);\n\n\tconst getLessons = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tlet request = \"\";\n\t\tif (props.level == 1) {\n\t\t\trequest = '/accounts/getstudentlessons?studentid=' + await urlParams.get('studentid');\n\t\t} else if (props.level >= 2) {\n\t\t\trequest = '/accounts/gettutorlessons?tutorid=' + await urlParams.get('tutorid');\n\t\t}\n\n\t\tconst response = await fetch(request,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\t\tlet lessons = [];\n\t\tfor (let lesson of data) {\n\t\t\tlet specPoints = [];\n\t\t\tfor (let point of lesson.specPoints) {\n\t\t\t\tspecPoints.push(point.content);\n\t\t\t}\n\n\t\t\tlet specPointsAchieved = [];\n\t\t\tfor (let point of lesson.specPointsAchieved) {\n\t\t\t\tspecPointsAchieved.push(point.content);\n\t\t\t}\n\n\t\t\tlessons.push(\n\t\t\t\tcreateData(\n\t\t\t\t\tlesson._id,\n\t\t\t\t\tlesson.title,\n\t\t\t\t\tlesson.plan,\n\t\t\t\t\tspecPoints,\n\t\t\t\t\tlesson.report,\n\t\t\t\t\tspecPointsAchieved,\n\t\t\t\t\tlesson.date\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tlessons.sort((a, b) => {\n\t\t\treturn b.date - a.date\n\t\t});\n\t\tsetRows(lessons);\n\n\t};\n\n\tconst createData = (\n\t\t_id,\n\t\ttitle,\n\t\tplan,\n\t\tspecPoints,\n\t\treport,\n\t\tspecPointsAchieved,\n\t\tdate\n\t) => {\n\t\treturn {\n\t\t\t_id,\n\t\t\ttitle,\n\t\t\tplan,\n\t\t\tspecPoints,\n\t\t\treport,\n\t\t\tspecPointsAchieved,\n\t\t\tdate,\n\t\t};\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\ttable: {\n\t\t\tminWidth: 650,\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tminWidth: 0,\n\t\t\t\toverflow: 'scroll'\n\t\t\t}\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\tif (width < 800) {\n\t\treturn (\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Title</TableCell>\n\t\t\t\t\t\t\t<TableCell>Expand</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t\t<BigLesson\n\t\t\t\t\t\t\t\tid={row._id}\n\t\t\t\t\t\t\t\t_id={row._id}\n\t\t\t\t\t\t\t\ttitle={row.title}\n\t\t\t\t\t\t\t\tplan={row.plan}\n\t\t\t\t\t\t\t\tspecPoints={row.specPoints}\n\t\t\t\t\t\t\t\tspecPointsAchieved={row.specPointsAchieved}\n\t\t\t\t\t\t\t\treport={row.report}\n\t\t\t\t\t\t\t\tdate={row.date}\n\t\t\t\t\t\t\t\tmobile={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Title</TableCell>\n\t\t\t\t\t\t\t<TableCell>Specification Points</TableCell>\n\t\t\t\t\t\t\t<TableCell>Achieved Specification Points</TableCell>\n\t\t\t\t\t\t\t<TableCell style={{ width: 150 }}>Date</TableCell>\n\t\t\t\t\t\t\t<TableCell>Expand</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t\t<BigLesson\n\t\t\t\t\t\t\t\tid={row._id}\n\t\t\t\t\t\t\t\t_id={row._id}\n\t\t\t\t\t\t\t\ttitle={row.title}\n\t\t\t\t\t\t\t\tplan={row.plan}\n\t\t\t\t\t\t\t\tspecPoints={row.specPoints}\n\t\t\t\t\t\t\t\tspecPointsAchieved={row.specPointsAchieved}\n\t\t\t\t\t\t\t\treport={row.report}\n\t\t\t\t\t\t\t\tdate={row.date}\n\t\t\t\t\t\t\t\tmobile={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t);\n\t}\n};\n\nexport default StudentLessons;","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/Progress.js",["183","184"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst Progress = () => {\n\tconst [rows, setRows] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetStudentPoints();\n\t}, []);\n\n\tconst getStudentPoints = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/accounts/getstudentpoints?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\n\t\tif (data.error != undefined) {\n\t\t\t//Error handling later? Probably redirect.\n\t\t} else {\n\t\t\tlet dataRows = [];\n\t\t\tfor (let point of data) {\n\t\t\t\tdataRows.push(createData(point.content, point.date, point._id));\n\t\t\t}\n\t\t\tsetRows(dataRows);\n\t\t}\n\t};\n\n\tconst createData = (content, date, status) => {\n\t\treturn { content, date, status };\n\t};\n\n\tconst getStatus = (date) => {\n\t\t//2629800000 == 1 month\n\t\tif (new Date() - (date * 1000) < 2629800000) {\n\t\t\treturn \"Good\";\n\t\t} else {\n\t\t\treturn \"Needs revision\";\n\t\t}\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tstudentBoxWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginTop: 50,\n\t\t\tmarginLeft: '5%',\n\t\t},\n\t\tstudentBox: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Spec point</TableCell>\n\t\t\t\t\t\t<TableCell>Date Reviewed</TableCell>\n\t\t\t\t\t\t<TableCell>Status</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t\t<TableCell>{row.content}</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{new Date(row.date * 1000).toDateString(\n\t\t\t\t\t\t\t\t\t'en-UK'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{getStatus(row.date)}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n\nexport default Progress;\n","/home/johnc/Code/RealTutorMERN/client/src/components/FeatureComponents/Dashboard.js",["185","186","187"],"import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport Lesson from '../general/Lessons';\nimport Progress from '../general/Progress';\nimport UpcomingLesson from '../general/UpcomingLesson';\nimport Paper from '@material-ui/core/Paper';\n\nconst StudentDashboard = (props) => {\n\tconst queryString = window.location.search;\n\tconst urlParams = new URLSearchParams(queryString);\n\n\tconst [hours, setHours] = useState();\n\n\tuseEffect(() => {\n\t\tgetHours();\n\t}, []);\n\n\tconst getHours = async () => {\n\t\tconst response = await fetch(\n\t\t\t'/accounts/getremaininghours?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\t\tsetHours(data.hours);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tpaper: {\n\t\t\tmargin: 5,\n\t\t\ttextAlign: 'center',\n\t\t\theight: 350,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tcardsWrapper: {\n\t\t\twidth: '90%',\n\t\t\tmarginLeft: '5%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardContent: {\n\t\t\tflex: 5,\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t},\n\t\tcardAction: {\n\t\t\twidth: '50%',\n\t\t\tmarginLeft: '25%',\n\t\t\tmarginBottom: 10,\n\t\t\tflex: 1,\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '90%',\n\t\t\t\tmarginLeft: '5%',\n\t\t\t},\n\t\t},\n\t\tbutton: {\n\t\t\tmarginLeft: 5,\n\t\t\tmarginRight: 5,\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Lessons</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<Lesson level={props.level} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(4);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tprops.level == 1 ? { display: 'none' } : {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd report\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(1);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tView lessons\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Upcoming</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<UpcomingLesson />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(3);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tprops.level == 1 ? { display: 'none' } : {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPlan lesson\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Progress</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<Progress />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeState(2);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tView progress\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item lg={6} md={12} sm={12} xs={12}>\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t<Box display=\"flex\" className={classes.cardsWrapper}>\n\t\t\t\t\t\t<Typography variant=\"h2\">Mixed</Typography>\n\t\t\t\t\t\t<Box className={classes.cardContent}>\n\t\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\t\tRemaining Hours: {hours}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={classes.cardAction}></Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default StudentDashboard;\n","/home/johnc/Code/RealTutorMERN/client/src/components/general/UpcomingLesson.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/general/Progress.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/general/Lessons.js",["188","189","190","191"],"import { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Lesson = (props) => {\n\tconst [lesson, setLesson] = useState({});\n\tconst [open, setOpen] = useState(false);\n\n\tconst [q1, setq1] = useState(50);\n\tconst [q2, setq2] = useState(50);\n\tconst [q3, setq3] = useState(50);\n\n\tuseEffect(() => {\n\t\tgetLessons();\n\t}, []);\n\n\tconst getLessons = async () => {\n\t\tconst queryString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(queryString);\n\n\t\tconst response = await fetch(\n\t\t\t'/accounts/getstudentlatestlesson?studentid=' +\n\t\t\t\turlParams.get('studentid'),\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t}\n\t\t);\n\n\t\tconst data = await response.json();\n\t\tsetLesson(data);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tdialog: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingTop: 10,\n\t\t\tpaddingBottom: 10,\n\t\t},\n\t\tdialogWrapper: {\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '95%',\n\t\t\t\tmarginLeft: '2.5%',\n\t\t\t},\n\t\t},\n\t\tpaper: {\n\t\t\tminWidth: '70%',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tminWidth: '95%',\n\t\t\t},\n\t\t},\n\t}));\n\tconst classes = useStyles();\n\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst handleSubmit = async () => {\n\t\tlet body = {\n\t\t\tanswers: [\n\t\t\t\t{\n\t\t\t\t\tquestion: 'Test 1',\n\t\t\t\t\tanswer: q1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tquestion: 'Test 2',\n\t\t\t\t\tanswer: q2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tquestion: 'Test 3',\n\t\t\t\t\tanswer: q3,\n\t\t\t\t},\n\t\t\t],\n\t\t\tlessonID: lesson._id,\n\t\t};\n\n\t\tconst submitFeedback = await fetch('/forms/studentfeedback', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\tconst data = await submitFeedback.json();\n\t\t\n\t\tlesson.studentFeedback = true;\n\t\tsetLesson(lesson);\n\t\tsetOpen(false);\n\n\t};\n\n\tconst getFeedbackButton = () => {\n\n\t\tif (Object.keys(lesson).length == 0) {\n\t\t\tconsole.log(\"dsa\")\n\t\t\treturn <div></div>;\n\t\t}\n\n\t\tif (!lesson.studentFeedback && props.level == 1) {\n\t\t\treturn (\n\t\t\t\t<div style={{ float: 'left' }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={handleOpen}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd feedback\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn <div></div>;\n\t};\n\n\tif (lesson.error != null) {\n\t\treturn <div></div>;\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Typography variant=\"h4\" align=\"left\">\n\t\t\t\t\tLatest lesson:\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body1\" align=\"left\">\n\t\t\t\t\t{lesson.plan}\n\t\t\t\t</Typography>\n\t\t\t\t<br></br>\n\t\t\t\t{getFeedbackButton()}\n\t\t\t\t<Dialog\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\topen={open}\n\t\t\t\t\tclassName={classes.dialogWrapper}\n\t\t\t\t\tclasses={{ paper: classes.paper }}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.dialog}>\n\t\t\t\t\t\t<Typography variant=\"h1\" noWrap={true} align=\"center\">\n\t\t\t\t\t\t\tLesson feedback form\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tHow was your lesson?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tvalue={q1}\n\t\t\t\t\t\t\tonChange={(event, newValue) => setq1(newValue)}\n\t\t\t\t\t\t\tdefaultValue={50}\n\t\t\t\t\t\t\tstep={2}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\tstyle={{ width: '95%', marginLeft: '2.5%' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tHow was your lesson?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tvalue={q2}\n\t\t\t\t\t\t\tonChange={(event, newValue) => setq2(newValue)}\n\t\t\t\t\t\t\tdefaultValue={50}\n\t\t\t\t\t\t\tstep={2}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\tstyle={{ width: '95%', marginLeft: '2.5%' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tHow was your lesson?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tvalue={q3}\n\t\t\t\t\t\t\tonChange={(event, newValue) => setq3(newValue)}\n\t\t\t\t\t\t\tdefaultValue={50}\n\t\t\t\t\t\t\tstep={2}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\tstyle={{ width: '95%', marginLeft: '2.5%' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tstyle={{ width: '95%', marginLeft: '2.5%' }}\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Lesson;\n","/home/johnc/Code/RealTutorMERN/client/src/components/general/StudentCard.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/general/SubjectCard.js",[],"/home/johnc/Code/RealTutorMERN/client/src/components/general/DefaultAppBar.js",["192"],"import react, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst DefaultAppBar = (props) => {\n\tconst [width, setWidth] = useState(window.innerWidth);\n\tconst [open, setOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', () => setWidth(window.innerWidth));\n\t}, []);\n\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tlist: {\n\t\t\tdisplay: 'flex',\n\t\t\tfloat: 'right',\n\t\t},\n\t\tlistItem: {\n\t\t\tmarginLeft: 10,\n\t\t\tmarginRight: 10,\n\t\t},\n\t\tdrawerPaper: {\n\t\t\twidth: '100%',\n\t\t},\n\t\tdrawerItem: {\n\t\t\twidth: width / 1.5,\n\t\t\tmarginTop: 20,\n\t\t\tmarginButtom: 20,\n\t\t\tmarginLeft: 10,\n\t\t\tmarginRight: 10,\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\tconst contactUsMobile = () => {\n\t\tprops.contactus();\n\t\tsetOpen(false);\n\t};\n\n\tif (width < 750) {\n\t\treturn (\n\t\t\t<AppBar position=\"absolute\" className={classes.appBar}>\n\t\t\t\t<Toolbar\n\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'space-between' }}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\tonClick={() => (document.location.href = '/')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"h3\">Real Tutor</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<IconButton onClick={handleDrawerOpen}>\n\t\t\t\t\t\t<MenuIcon color=\"secondary\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<SwipeableDrawer\n\t\t\t\t\t\topen={open}\n\t\t\t\t\t\tonClose={handleDrawerClose}\n\t\t\t\t\t\tonOpen={handleDrawerOpen}\n\t\t\t\t\t\tdisableRestoreFocus\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.drawerItem}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAbout Us\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.drawerItem}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubjects\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.drawerItem}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOur Team\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.drawerItem}\n\t\t\t\t\t\t\tonClick={contactUsMobile}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tContact Us\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</SwipeableDrawer>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<AppBar position=\"absolute\" className={classes.appBar}>\n\t\t\t\t<Toolbar\n\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'space-between' }}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\tonClick={() => (document.location.href = '/')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"h3\">Real Tutor</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<List className={classes.list}>\n\t\t\t\t\t\t<Button color=\"secondary\" className={classes.listItem}>\n\t\t\t\t\t\t\tHow it works\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.listItem}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t(document.location.href = '/subjects')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubjects\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button color=\"secondary\" className={classes.listItem}>\n\t\t\t\t\t\t\tOur Team\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.listItem}\n\t\t\t\t\t\t\tonClick={props.contactus}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tContact Us\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</List>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t);\n\t}\n};\n\nexport default DefaultAppBar;\n","/home/johnc/Code/RealTutorMERN/client/src/components/StyledComponents/Banner.js",["193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":75,"column":19,"nodeType":"200","messageId":"201","endLine":75,"endColumn":21},{"ruleId":"198","severity":1,"message":"199","line":78,"column":26,"nodeType":"200","messageId":"201","endLine":78,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":18},{"ruleId":"202","severity":1,"message":"206","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":17},{"ruleId":"202","severity":1,"message":"207","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":16},{"ruleId":"202","severity":1,"message":"208","line":11,"column":8,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":73,"column":5,"nodeType":"211","endLine":73,"endColumn":7,"suggestions":"212"},{"ruleId":"198","severity":1,"message":"199","line":87,"column":18,"nodeType":"200","messageId":"201","endLine":87,"endColumn":20},{"ruleId":"198","severity":1,"message":"213","line":87,"column":51,"nodeType":"200","messageId":"201","endLine":87,"endColumn":53},{"ruleId":"198","severity":1,"message":"199","line":89,"column":25,"nodeType":"200","messageId":"201","endLine":89,"endColumn":27},{"ruleId":"198","severity":1,"message":"213","line":89,"column":60,"nodeType":"200","messageId":"201","endLine":89,"endColumn":62},{"ruleId":"198","severity":1,"message":"199","line":93,"column":18,"nodeType":"200","messageId":"201","endLine":93,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":71,"column":5,"nodeType":"211","endLine":71,"endColumn":7,"suggestions":"214"},{"ruleId":"198","severity":1,"message":"199","line":89,"column":18,"nodeType":"200","messageId":"201","endLine":89,"endColumn":20},{"ruleId":"198","severity":1,"message":"213","line":89,"column":53,"nodeType":"200","messageId":"201","endLine":89,"endColumn":55},{"ruleId":"198","severity":1,"message":"199","line":91,"column":25,"nodeType":"200","messageId":"201","endLine":91,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":106,"column":32,"nodeType":"200","messageId":"201","endLine":106,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":111,"column":18,"nodeType":"200","messageId":"201","endLine":111,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":140,"column":24,"nodeType":"200","messageId":"201","endLine":140,"endColumn":26},{"ruleId":"202","severity":1,"message":"215","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":13},{"ruleId":"202","severity":1,"message":"216","line":23,"column":9,"nodeType":"204","messageId":"205","endLine":23,"endColumn":14},{"ruleId":"209","severity":1,"message":"217","line":176,"column":5,"nodeType":"211","endLine":176,"endColumn":7,"suggestions":"218"},{"ruleId":"198","severity":1,"message":"199","line":180,"column":32,"nodeType":"200","messageId":"201","endLine":180,"endColumn":34},{"ruleId":"202","severity":1,"message":"219","line":185,"column":9,"nodeType":"204","messageId":"205","endLine":185,"endColumn":16},{"ruleId":"220","severity":1,"message":"221","line":237,"column":7,"nodeType":"222","endLine":237,"endColumn":62},{"ruleId":"223","severity":1,"message":"224","line":574,"column":9,"nodeType":"225","endLine":574,"endColumn":42},{"ruleId":"202","severity":1,"message":"226","line":11,"column":12,"nodeType":"204","messageId":"205","endLine":11,"endColumn":23},{"ruleId":"202","severity":1,"message":"227","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"228","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":15},{"ruleId":"202","severity":1,"message":"229","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":24},{"ruleId":"202","severity":1,"message":"230","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"231","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":13},{"ruleId":"202","severity":1,"message":"232","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":12},{"ruleId":"202","severity":1,"message":"233","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":28},{"ruleId":"202","severity":1,"message":"234","line":3,"column":22,"nodeType":"204","messageId":"205","endLine":3,"endColumn":36},{"ruleId":"202","severity":1,"message":"235","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":23},{"ruleId":"202","severity":1,"message":"236","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":132,"column":18,"nodeType":"200","messageId":"201","endLine":132,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":213,"column":25,"nodeType":"200","messageId":"201","endLine":213,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":316,"column":25,"nodeType":"200","messageId":"201","endLine":316,"endColumn":27},{"ruleId":"209","severity":1,"message":"237","line":11,"column":6,"nodeType":"211","endLine":11,"endColumn":8,"suggestions":"238"},{"ruleId":"198","severity":1,"message":"213","line":47,"column":18,"nodeType":"200","messageId":"201","endLine":47,"endColumn":20},{"ruleId":"198","severity":1,"message":"213","line":113,"column":32,"nodeType":"200","messageId":"201","endLine":113,"endColumn":34},{"ruleId":"202","severity":1,"message":"239","line":20,"column":9,"nodeType":"204","messageId":"205","endLine":20,"endColumn":13},{"ruleId":"202","severity":1,"message":"240","line":20,"column":15,"nodeType":"204","messageId":"205","endLine":20,"endColumn":22},{"ruleId":"198","severity":1,"message":"213","line":50,"column":18,"nodeType":"200","messageId":"201","endLine":50,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":86,"column":22,"nodeType":"200","messageId":"201","endLine":86,"endColumn":24},{"ruleId":"198","severity":1,"message":"213","line":126,"column":32,"nodeType":"200","messageId":"201","endLine":126,"endColumn":34},{"ruleId":"223","severity":1,"message":"224","line":224,"column":9,"nodeType":"225","endLine":224,"endColumn":32},{"ruleId":"209","severity":1,"message":"241","line":21,"column":5,"nodeType":"211","endLine":21,"endColumn":7,"suggestions":"242"},{"ruleId":"198","severity":1,"message":"199","line":28,"column":19,"nodeType":"200","messageId":"201","endLine":28,"endColumn":21},{"ruleId":"209","severity":1,"message":"243","line":17,"column":5,"nodeType":"211","endLine":17,"endColumn":7,"suggestions":"244"},{"ruleId":"198","severity":1,"message":"213","line":38,"column":18,"nodeType":"200","messageId":"201","endLine":38,"endColumn":20},{"ruleId":"209","severity":1,"message":"245","line":21,"column":5,"nodeType":"211","endLine":21,"endColumn":7,"suggestions":"246"},{"ruleId":"198","severity":1,"message":"199","line":98,"column":22,"nodeType":"200","messageId":"201","endLine":98,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":133,"column":22,"nodeType":"200","messageId":"201","endLine":133,"endColumn":24},{"ruleId":"202","severity":1,"message":"231","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":13},{"ruleId":"202","severity":1,"message":"247","line":103,"column":9,"nodeType":"204","messageId":"205","endLine":103,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":113,"column":34,"nodeType":"200","messageId":"201","endLine":113,"endColumn":36},{"ruleId":"198","severity":1,"message":"199","line":118,"column":46,"nodeType":"200","messageId":"201","endLine":118,"endColumn":48},{"ruleId":"202","severity":1,"message":"230","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"209","severity":1,"message":"248","line":26,"column":5,"nodeType":"211","endLine":26,"endColumn":7,"suggestions":"249"},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'PlanLesson' is defined but never used.","Identifier","unusedVar","'AddReport' is defined but never used.","'Progress' is defined but never used.","'BigLesson' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAuth'. Either include it or remove the dependency array.","ArrayExpression",["252"],"Expected '!==' and instead saw '!='.",["253"],"'Slide' is defined but never used.","'enter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkQuery'. Either include it or remove the dependency array.",["254"],"'checked' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'stripeError' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'BannerBackground' is defined but never used.","'react' is defined but never used.","'Paper' is defined but never used.","'Card' is defined but never used.","'TitleDescriptionCard' is defined but never used.","'createMuiTheme' is defined but never used.","'SwipeableDrawer' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'getTutorStudents'. Either include it or remove the dependency array.",["255"],"'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLessons'. Either include it or remove the dependency array.",["256"],"React Hook useEffect has a missing dependency: 'getStudentPoints'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'getHours'. Either include it or remove the dependency array.",["258"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.small'. Either include it or remove the dependency array.",["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"260","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [getAuth]",{"range":"275","text":"276"},{"range":"277","text":"276"},"Update the dependencies array to be: [checkQuery]",{"range":"278","text":"279"},"Update the dependencies array to be: [getTutorStudents]",{"range":"280","text":"281"},"Update the dependencies array to be: [getLessons]",{"range":"282","text":"283"},"Update the dependencies array to be: [getStudentPoints]",{"range":"284","text":"285"},"Update the dependencies array to be: [getHours]",{"range":"286","text":"287"},"Update the dependencies array to be: [props.small]",{"range":"288","text":"289"},[1725,1727],"[getAuth]",[1651,1653],[3789,3791],"[checkQuery]",[290,292],"[getTutorStudents]",[762,764],"[getLessons]",[582,584],"[getStudentPoints]",[688,690],"[getHours]",[647,649],"[props.small]"]