{"version":3,"sources":["components/general/CustomTextField.js","components/pages/Login.js","components/general/LeftDrawer.js","components/FeatureComponents/PlanLesson.js","components/general/Lessons.js","components/general/Progress.js","components/general/UpcomingLesson.js","components/FeatureComponents/Dashboard.js","components/FeatureComponents/AddReport.js","components/FeatureComponents/Progress.js","components/FeatureComponents/StudentLessons.js","components/pages/StudentDashboard.js","theme.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["CustomTextField","props","classes","makeStyles","theme","customTextField","color","palette","cards","borderColor","multilineColor","useStyles","TextField","variant","className","label","onChange","error","onFocus","InputProps","type","Login","useState","email","setEmail","password","setPassword","setError","leftNav","flex","height","display","flexDirection","justifyContent","alignItems","minWidth","leftNavPaper","backgroundColor","secondary","main","submitLogin","event","a","preventDefault","JSONdata","fetch","method","headers","body","JSON","stringify","response","json","data","document","cookie","location","href","setErrorFalse","Paper","square","Box","target","value","Button","onClick","LeftDrawer","width","button","marginLeft","marginRight","drawer","zIndex","drawerPaper","icon","divBackground","text","lightText","appBar","toolbar","overflow","AppBar","position","Toolbar","Typography","noWrap","Drawer","paper","drawerContainer","List","ListItem","changeState","ListItemIcon","ListItemText","primary","PlanLesson","Date","selectedDate","handleDateChange","points","setPoints","plan","setPlan","selectedPoints","setSelectedPoints","useEffect","getSpecPoints","queryString","window","search","urlParams","URLSearchParams","get","credentials","formattedPoints","point","push","_id","content","submitLesson","studentid","tutorid","id","date","Math","floor","getTime","formattedpoints","p","specPoints","saveLesson","undefined","lessonsWrapper","multiLineInput","leftMargin","marginBottom","inputBox","paddingLeft","paddingRight","paddingTop","paddingBottom","gridItem","marginTop","onSubmit","Grid","container","spacing","item","lg","md","elevation","placeholder","multiline","rows","onBlur","Divider","utils","DateMomentUtils","DateTimePicker","style","inputVariant","options","colors","primary25","primary50","isMulti","name","Lesson","lesson","setLesson","getLessons","align","Progress","empty","progress","setProgress","getProgress","LinearProgress","UpcomingLesson","upcomingLesson","setUpcomingLesson","getUpcomingLesson","map","StudentDashboard","margin","textAlign","borderRadius","cardsWrapper","cardContent","cardAction","Card","AddReport","lessons","setLessons","selectedLesson","setSelectedLesson","report","setReport","newData","lessonID","specPointsAchieved","dropdown","divider","FormControl","InputLabel","Select","labelId","MenuItem","toDateString","setRows","getStudentPoints","console","log","dataRows","createData","status","studentBoxWrapper","studentBox","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","TableBody","row","StudentLessons","title","scope","studentNameWrapper","studentNameText","flexGrow","background","default","padding","auth","setAuth","current","setCurrent","getAuth","Dashboard","createMuiTheme","teal","grey","typography","fontFamily","h1","fontSize","h3","fontWeight","App","ThemeProvider","CssBaseline","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ee32d10.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\n\nfunction CustomTextField(props) {\n\n    const useStyles = makeStyles(theme => (\n        {\n            customTextField: {\n                '& .MuiInputBase-input': {\n                    color: theme.palette.cards\n                },\n                '& label': {\n                    color: theme.palette.cards\n                },\n                '& label.Mui-focused': {\n                    color: theme.palette.cards\n                },\n                '& .MuiInput-underline:after': {\n                    color: theme.palette.cards\n                },\n                '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                        borderColor: theme.palette.cards\n                    },\n                    '&:hover fieldset': {\n                        borderColor: theme.palette.cards\n                    },\n                    '&.Mui-focused fieldset': {\n                        borderColor: theme.palette.cards\n                    },\n                },\n            },\n            multilineColor:{\n                color: theme.palette.cards\n            }\n        }));\n        \n        const classes = useStyles();\n        \n        return(\n            <TextField \n            variant=\"filled\" \n            className={classes.customTextField}\n            label={props.label}\n            onChange={props.onChange}\n            error={props.error}\n            onFocus={props.onFocus}\n            InputProps={{\n                className: classes.multilineColor\n              }}\n            type={props.type}>\n            Hello there\n            </TextField>\n            )\n            \n        }\n        \n        export default CustomTextField;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nimport CustomTextField from '../general/CustomTextField';\n\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nfunction Login() {\n  \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n  \n  const useStyles = makeStyles(theme => ({\n    leftNav: {\n      flex: 1,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minWidth: 400,\n    },\n    leftNavPaper: {\n      backgroundColor: theme.palette.secondary.main\n    }\n  }));\n  \n  const submitLogin = async (event) => {\n    \n    event.preventDefault();\n    const JSONdata = {email: email, password: password};\n    \n    const response = await fetch('/accounts/login', {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(JSONdata)\n  });\n  \n  const data = await response.json();\n  if (data.error != null) {\n    setError(true);\n    setEmail(\"\");\n    setPassword(\"\");\n  } else {\n    document.cookie = \"token=\" + data.cookie;\n    document.location.href = \"studentdashboard\";\n  }\n  \n}\n\nconst emailChange = (event) => {\n  setEmail(event.target.value);\n  setError(false);\n}\n\nconst passwordChange = (event) => {\n  setError(false);\n  setPassword(event.target.value);\n}\n\nconst setErrorFalse = () => setError(false);\n\nconst classes = useStyles();\n\nreturn (\n  <div className=\"App\">\n  <Paper className={classes.leftNavPaper} square>\n  <Box className={classes.leftNav}>\n\n  <form className=\"loginWrapper\">\n  \n  <CustomTextField label=\"Email\" onChange={emailChange} error={error} onFocus={setErrorFalse} />\n  <CustomTextField label=\"Password\" onChange={passwordChange} error={error} onFocus={setErrorFalse} type=\"password\"/>\n  <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"submit\" onClick={submitLogin}>Login</Button>\n  \n  </form>\n\n  </Box>\n  </Paper>\n  \n  <div className=\"mainWrapper\"></div>\n  </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography } from '@material-ui/core';\n\nconst LeftDrawer = (props) => {\n  \n  const drawerWidth = 300;\n  \n  const useStyles = makeStyles(theme => ({\n    leftNavPaper: {\n      backgroundColor: theme.palette.leftNav,\n      height: \"100%\",\n      width: drawerWidth\n    },\n    button: {\n      marginLeft: 5,\n      marginRight: 5\n    },\n    drawer: {\n      width: drawerWidth,\n      zIndex: 0\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    icon: {\n      color: theme.palette.divBackground\n    },\n    text: {\n      color: theme.palette.lightText\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    toolbar: {\n      overflow: \"auto\"\n    }\n  }));\n  \n  const classes = useStyles();\n\n  return (\n    <div>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n    <Toolbar>\n    <Typography variant=\"h6\" noWrap>\n    Real Tutor\n    </Typography>\n    </Toolbar>\n    </AppBar>\n    <Drawer\n    className={classes.drawer}\n    variant=\"permanent\"\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n    >\n    <Toolbar />\n    <div className={classes.drawerContainer}>\n    <List>\n\n    <ListItem button key={0} onClick={() => props.changeState(0)}>\n    <ListItemIcon><InboxIcon /></ListItemIcon>\n    <ListItemText primary={\"Dashboard\"} />\n    </ListItem>\n\n    <ListItem button key={1} onClick={() => props.changeState(1)}>\n    <ListItemIcon><InboxIcon /></ListItemIcon>\n    <ListItemText primary={\"View lessons\"} />\n    </ListItem>\n\n    <ListItem button key={2} onClick={() => props.changeState(2)}>\n    <ListItemIcon><InboxIcon /></ListItemIcon>\n    <ListItemText primary={\"View progress\"} />\n    </ListItem>\n\n    <ListItem button key={3} onClick={() => props.changeState(3)}>\n    <ListItemIcon><InboxIcon /></ListItemIcon>\n    <ListItemText primary={\"Plan lesson\"} />\n    </ListItem>\n\n    <ListItem button key={4} onClick={() => props.changeState(4)}>\n    <ListItemIcon><InboxIcon/></ListItemIcon>\n    <ListItemText primary={\"Add report\"} />\n    </ListItem>\n\n    </List>\n    \n    </div>\n    </Drawer>\n    </div>\n    );\n    \n  }\n  \n  export default LeftDrawer;","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport Select from 'react-select'\n\nimport DateMomentUtils from '@date-io/date-fns';\nimport {\n    DateTimePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nconst PlanLesson = () => {\n    \n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [points, setPoints] = useState([]);\n    const [plan, setPlan] = useState(\"\");\n    const [selectedPoints, setSelectedPoints] = useState([]);\n    \n    useEffect(() => {\n        getSpecPoints();\n    }, []);\n    \n    const getSpecPoints = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/spec/getspecfromstudentid?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        \n        let formattedPoints = [];\n        for (let point of data) {\n            formattedPoints.push({value: point._id, label: point.content});\n        }\n        \n        setPoints(formattedPoints);\n        \n    }\n    \n    const submitLesson = async (event) => {\n        \n        //StudentID, TutorID, plan, specPoints, date\n        \n        event.preventDefault();\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const studentid = urlParams.get('studentid');\n        \n        const response = await fetch(\"/accounts/getid\", {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        const tutorid = data.id;\n        const date = Math.floor(new Date(selectedDate).getTime() / 1000);\n        \n        let formattedpoints = [];\n        for (let p of selectedPoints) formattedpoints.push(p.value);\n        \n        const body = {date: date, plan: plan, studentid: studentid, tutorid: tutorid, specPoints: formattedpoints};\n        \n        const saveLesson = await fetch(\"/accounts/addlesson\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(body)\n        });\n        \n        const saveLessonResponse = await saveLesson.json();\n        \n        if (saveLessonResponse.error != undefined) {\n            //something?\n        } else {\n            document.location.href = \"studentdashboard?studentid=\" + studentid;\n        }\n        \n    }\n    \n    const planChange = (event) => {\n        setPlan(event.target.value);\n    }\n    \n    const useStyles = makeStyles(theme => ({\n        lessonsWrapper: {\n            width: \"90%\",\n            height: \"95%\",\n            marginLeft: \"5%\",\n            display: \"flex\",\n            justifyContent: \"center\"\n        },\n        multiLineInput: {\n            width: \"90%\",\n            leftMargin: \"5%\",\n            marginBottom: 10\n        },\n        inputBox: {\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 10,\n            paddingBottom: 10\n        },\n        gridItem: {\n            marginTop: 10,\n            marginBottom: 10\n        },\n        button: {\n            width: \"50%\"\n        }\n    }));\n    \n    const customTheme = (theme) => {\n        return {\n            ...theme,\n            colors: {\n                ...theme.colors,\n                primary: '#009688',\n                primary25: '#b2dfdb',\n                primary50: '#80cbc4'\n            }\n        }\n    }\n    \n    const classes = useStyles();\n    \n    return (\n        \n        <form onSubmit={submitLesson}>\n        <Grid container spacing={3} className={classes.lessonsWrapper}>\n        <Grid item lg={8} md={12}>\n        <Paper elevation={2} className={classes.inputBox}>\n        \n        <Typography variant=\"h2\">Lesson Planning</Typography>\n        <TextField label=\"plan\" placeholder=\"This is plan\" multiline \n        rows={3} variant=\"outlined\" className={classes.multiLineInput} onBlur={planChange} />\n        <Divider />\n        \n        <Typography variant=\"h2\">Date and Time</Typography>\n        <MuiPickersUtilsProvider utils={DateMomentUtils}>\n        <DateTimePicker onChange={handleDateChange} style={{width: \"50%\"}} inputVariant=\"outlined\" />\n        </ MuiPickersUtilsProvider>\n        \n        <Divider className={classes.gridItem} />\n        \n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>Submit plan</Button>\n        \n        </Paper>\n        </Grid>\n        <Grid item lg={4} md={12}>\n        \n        \n        <Paper className={classes.inputBox}>\n        <Typography variant=\"h3\">Select planned spec points</Typography>\n        <Select options={points} theme={customTheme} isMulti name=\"Specification points\" onChange={setSelectedPoints}/>\n        </Paper>\n        \n        </Grid>\n        </Grid>\n        </form>\n        \n        )\n    }\n    \n    export default PlanLesson;","import { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst Lesson = () => {\n\n    const [lesson, setLesson] = useState({});\n\n    useEffect(() => {\n        getLessons();\n    }, []);\n\n    const getLessons = async () => {\n\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n\n        const response = await fetch(\"/accounts/getstudentlatestlesson?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n\n        const data = await response.json();\n        setLesson(data);\n\n    }\n\n    if (lesson.error != null) {\n        return (<div></div>);\n    } else {\n        return (\n            <div>\n                <Typography variant=\"h4\" align=\"left\">Latest lesson:</Typography>\n                <Typography variant=\"body1\" align=\"left\">{lesson.plan}</Typography>\n            </div>\n        );\n    }\n}\n\nexport default Lesson;","import React, { useEffect, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst Progress = () => {\n    \n    const [progress, setProgress] = useState({empty: true});\n    \n    useEffect(() => {\n        getProgress();\n    }, []);\n    \n    const getProgress = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/accounts/getstudentprogress?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        setProgress(data);\n        \n    }\n\n    return (\n        <div>\n            <Typography variant=\"h4\">{progress.progress}% Course Completion</Typography>\n            <LinearProgress variant=\"determinate\" value={progress.progress} />\n        </div>\n    )\n\n}\n            \nexport default Progress;","import { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst UpcomingLesson = () => {\n    \n    const [upcomingLesson, setUpcomingLesson] = useState({empty: true});\n    \n    useEffect(() => {\n        getUpcomingLesson();\n    }, []);\n    \n    const getUpcomingLesson = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/accounts/getstudentupcoming?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        setUpcomingLesson(data);\n        \n    }\n    \n    if (upcomingLesson.error != null || upcomingLesson.empty) {\n        return (<div>\n            <Typography variant=\"h4\">No upcoming lessons</Typography>\n            </div>\n            );\n        } else {\n            return (\n                <div>\n                <Typography variant=\"h4\" align=\"left\">{upcomingLesson.plan}</Typography>\n                <ul>\n                {upcomingLesson.specPoints.map(point => (\n                    <li key={point}><Typography variant=\"body1\" align=\"left\">{point.content}</Typography></li>\n                    ))}\n                    </ul>\n                    </div>\n                    );\n                }\n            }\n            \n            export default UpcomingLesson;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport Lesson from '../general/Lessons';\nimport Progress from '../general/Progress';\nimport UpcomingLesson from '../general/UpcomingLesson';\n\nconst StudentDashboard = () => {\n    \n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n\n    const useStyles = makeStyles(theme => ({\n        \n        paper: {\n            margin: 5,\n            textAlign: 'center',\n            height: 350,\n            borderRadius: 10,\n        },\n        cardsWrapper: {\n            width: \"90%\",\n            marginLeft: \"5%\",\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        cardContent: {\n            flex: 5,\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        cardAction: {\n            width: \"50%\",\n            marginLeft: \"25%\",\n            marginBottom: 10,\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"center\"\n        },\n        button: {\n            marginLeft: 5,\n            marginRight: 5\n        },\n    }));\n\n    const classes = useStyles();\n    \n    return (\n    \n        <Grid container>\n        <Grid item lg={6} md={12}>\n        <Card className={classes.paper}>\n        <Box display=\"flex\" className={classes.cardsWrapper}>\n        <Typography variant=\"h2\">Lessons</Typography>\n        <Box className={classes.cardContent}>\n        <Lesson />\n        </Box>\n        <Box className={classes.cardAction}>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\"\n        onClick={() => {document.location.href = \"addreport?studentid=\" + urlParams.get(\"studentid\")}}>Add report</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\"\n        onClick={() => {document.location.href = \"lessons?studentid=\" + urlParams.get(\"studentid\")}}>View lessons</Button>\n        </Box>\n        </Box>\n        </Card>\n        </Grid>\n        <Grid item lg={6} md={12}>\n        <Card className={classes.paper}>\n        <Box display=\"flex\" className={classes.cardsWrapper}>\n        <Typography variant=\"h2\">Upcoming</Typography>\n        <Box className={classes.cardContent}>\n        <UpcomingLesson />\n        </Box>\n        <Box className={classes.cardAction}>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\"\n        onClick={() => {document.location.href = \"planlesson?studentid=\" + urlParams.get(\"studentid\")}}>Plan lesson</Button>\n        </Box>\n        </Box>\n        </Card>\n        </Grid>\n        <Grid item lg={6} md={12}>\n        <Card className={classes.paper}>\n        <Box display=\"flex\" className={classes.cardsWrapper}>\n        <Typography variant=\"h2\">Progress</Typography>\n        <Box className={classes.cardContent}>\n        <Progress />\n        </Box>\n        <Box className={classes.cardAction}>\n        <Button variant=\"contained\" color=\"primary\"\n        onClick={() => {document.location.href = \"progress?studentid=\" + urlParams.get(\"studentid\")}}>View progress</Button>\n        </Box>\n        </Box>\n        </Card>\n        </Grid>\n        <Grid item lg={6} md={12}>\n        <Card className={classes.paper}>\n        <Box display=\"flex\" className={classes.cardsWrapper}>\n        <Typography variant=\"h2\">Details</Typography>\n        <Box className={classes.cardContent}>\n        </Box>\n        <Box className={classes.cardAction}>\n        <Button variant=\"contained\" color=\"primary\">Edit details</Button>\n        </Box>\n        </Box>\n        </Card>\n        </Grid>\n        </Grid>\n\n        );\n    }\n    \n    export default StudentDashboard;","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ReactSelect from 'react-select'\n\nconst AddReport = () => {\n    \n    const [lessons, setLessons] = useState([]);\n    const [selectedLesson, setSelectedLesson] = useState({empty: true});\n    \n    const [auth, setAuth] = useState({empty: true});\n    const [points, setPoints] = useState([]);\n    const [report, setReport] = useState(\"\");\n    const [selectedPoints, setSelectedPoints] = useState([]);\n    \n    useEffect(() => {\n        getSpecPoints();\n        getLessons();\n    }, []);\n    \n    const getSpecPoints = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/spec/getspecfromstudentid?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        \n        let formattedPoints = [];\n        for (let point of data) {\n            formattedPoints.push({value: point._id, label: point.content});\n        }\n        \n        setPoints(formattedPoints);\n        \n    }\n    \n    const getLessons = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/accounts/getstudentlessons?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        let newData = [];\n        for (let lesson of data) {\n            if (lesson.report == undefined) {\n                newData.push(lesson);\n            }\n        }\n        \n        setLessons(newData);\n        \n    }\n    \n    const submitLesson = async (event) => {\n        \n        //StudentID, TutorID, plan, specPoints, date\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const studentid = urlParams.get('studentid');\n        \n        event.preventDefault();\n        \n        let formattedpoints = [];\n        for (let p of selectedPoints) formattedpoints.push(p.value);\n        \n        const body = {lessonID: selectedLesson, report: report, specPointsAchieved: formattedpoints};\n        \n        const saveLesson = await fetch(\"/accounts/addlessonreport\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(body)\n        });\n        \n        const saveLessonResponse = await saveLesson.json();\n        \n        if (saveLessonResponse.error != undefined) {\n            //something?\n        } else {\n            document.location.href = \"studentdashboard?studentid=\" + studentid;\n        }\n        \n    }\n    \n    const reportChange = (event) => {\n        setReport(event.target.value);\n    }\n    \n    const lessonSelect = (event) => {\n        setSelectedLesson(event.target.value);\n    }\n    \n    const useStyles = makeStyles(theme => ({\n        lessonsWrapper: {\n            width: \"90%\",\n            height: \"95%\",\n            marginLeft: \"5%\",\n            display: \"flex\",\n            justifyContent: \"center\"\n        },\n        multiLineInput: {\n            width: \"90%\",\n            leftMargin: \"5%\",\n            marginBottom: 10\n        },\n        inputBox: {\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 10,\n            paddingBottom: 10\n        },\n        gridItem: {\n            marginTop: 10,\n            marginBottom: 10\n        },\n        button: {\n            width: \"50%\"\n        },\n        dropdown: {\n            width: \"50%\"\n        },\n        divider: {\n            marginTop: 10,\n            marginBottom: 10,\n        }\n    }));\n    \n    const customTheme = (theme) => {\n        return {\n            ...theme,\n            colors: {\n                ...theme.colors,\n                primary: '#009688',\n                primary25: '#b2dfdb',\n                primary50: '#80cbc4'\n            }\n        }\n    }\n    \n    const classes = useStyles();\n    \n    return (\n\n        <form onSubmit={submitLesson}>\n        <Grid container spacing={3} className={classes.lessonsWrapper}>\n        <Grid item lg={8} md={12}>\n        <Paper elevation={2} className={classes.inputBox}>\n\n        <Typography variant=\"h2\">Add report</Typography>\n        <Divider className={classes.divider} />\n\n        <Typography variant=\"h3\">Select lesson</Typography>\n        <FormControl className={classes.dropdown} variant=\"outlined\">\n        <InputLabel id=\"select-lesson\">Select lesson</InputLabel>\n        <Select labelId=\"Select lesson\" id=\"lesson report\" labelId=\"select-lesson\" \n        value={selectedLesson.date} label=\"Select lesson\" onChange={lessonSelect}>\n        \n        {lessons.map(lesson => (\n            <MenuItem key={lesson._id} value={lesson._id}>{new Date(lesson.date * 1000).toDateString()}</MenuItem>\n        ))}\n            \n            </Select>\n            </FormControl>\n            \n            <Divider className={classes.divider} />\n\n            <Typography variant=\"h3\">Lesson Report</Typography>\n            <TextField label=\"Add lesson report\" placeholder=\"Add lesson report\" multiline \n            rows={3} variant=\"outlined\" className={classes.multiLineInput} onBlur={reportChange} />\n            \n            <Divider className={classes.gridItem} />\n            \n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>Submit Report</Button>\n            \n            </Paper>\n            </Grid>\n\n            <Grid item lg={4} md={12}>\n            \n            <Paper className={classes.inputBox}>\n            <Typography variant=\"h3\">Select achieved spec points</Typography>\n            <ReactSelect options={points} theme={customTheme} isMulti name=\"Specification points\" onChange={setSelectedPoints}/>\n            </Paper>\n\n            </Grid>\n            </Grid>\n            </form>\n            \n            )\n        }\n        \n        \n        export default AddReport;","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'\n\nconst Progress = () => {\n    \n    const [rows, setRows] = useState([]);\n    \n    useEffect(() => {\n        getStudentPoints();\n    }, []);\n    \n    \n    const getStudentPoints = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/accounts/getstudentpoints?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        console.log(data);\n        \n        let dataRows = [];\n        for (let point of data) {\n            dataRows.push(createData(point.content, new Date(point.date * 1000).toDateString(\"en-UK\"), point._id));\n        }\n        setRows(dataRows);\n        \n    }\n    \n    const createData = (content, date, status) => {\n        return {content, date, status};\n    }\n    \n    const useStyles = makeStyles(theme => ({\n        studentBoxWrapper: {\n            width: \"90%\",\n            marginTop: 50,\n            marginLeft: \"5%\"\n        },\n        studentBox: {\n            display: \"flex\",\n            flexDirection: \"column\"\n        }\n    }));\n    \n    const classes = useStyles();\n    \n    return (\n        \n        \n        <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n        <TableRow>\n        <TableCell>Spec point</TableCell>\n        <TableCell>Date Reviewed</TableCell>\n        <TableCell>Status</TableCell>\n        </TableRow>\n        </TableHead>\n        <TableBody>\n        {rows.map((row) => (\n            <TableRow key={row.name}>\n            <TableCell>{row.content}</TableCell>\n            <TableCell>{row.date}</TableCell>\n            <TableCell>{row.status}</TableCell>\n            </TableRow>\n            ))}\n            </TableBody>\n            </Table>\n            </TableContainer>\n            );\n        }\n        \n        export default Progress;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StudentLessons = () => {\n    \n    const [rows, setRows] = useState([]);\n\n    useEffect(() => {\n        getLessons();\n    }, []);\n    \n    const getLessons = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/accounts/getstudentlessons?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n\n        let lessons = [];\n        for (let lesson of data) {\n\n            let specPoints = [];\n            for (let point of lesson.specPoints) {\n                specPoints.push(point.content);\n            }\n\n            let specPointsAchieved = [];\n            for (let point of lesson.specPointsAchieved) {\n                specPointsAchieved.push(point.content);\n            }\n\n            lessons.push(createData(lesson._id, lesson.title, lesson.plan, specPoints, lesson.report, specPointsAchieved, lesson.date));\n\n        }\n        \n        setRows(lessons);\n\n    }\n    \n    const createData = (_id, title, plan, specPoints, report, specPointsAchieved, date) => {\n        return {_id, title, plan, specPoints, report, specPointsAchieved, date};\n    }\n\n    const useStyles = makeStyles(theme => ({\n        table: {\n            minWidth: 650,\n        }\n    }));\n    \n    const classes = useStyles();\n    \n    return (\n        \n        <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n        <TableRow>\n        <TableCell>Title</TableCell>\n        <TableCell>Plan</TableCell>\n        <TableCell>Specification Points</TableCell>\n        <TableCell>Report</TableCell>\n        <TableCell>Achieved Specification Points</TableCell>\n        <TableCell style={{ width: 150 }}>Date</TableCell>\n        </TableRow>\n        </TableHead>\n        <TableBody>\n        {rows.map((row) => (\n            <TableRow key={row._id}>\n            <TableCell component=\"th\" scope=\"row\">{row.title}</TableCell>\n            <TableCell>{row.plan}</TableCell>\n\n            <TableCell><ul>{row.specPoints.map((point) => (<li>{point}</li>))}</ul></TableCell>\n\n            <TableCell>{row.report}</TableCell>\n\n            <TableCell><ul>{row.specPointsAchieved.map((point) => (<li>{point}</li>))}</ul></TableCell>\n\n            <TableCell>{new Date(row.date * 1000).toDateString(\"en-UK\")}</TableCell>\n            </TableRow>\n            ))}\n            </TableBody>\n            </Table>\n            </TableContainer>\n            \n            );\n            \n        }\n        \n        export default StudentLessons;","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport LeftDrawer from '../general/LeftDrawer';\n\nimport PlanLesson from '../FeatureComponents/PlanLesson';\nimport Dashboard from '../FeatureComponents/Dashboard';\nimport AddReport from '../FeatureComponents/AddReport';\nimport Progress from '../FeatureComponents/Progress';\nimport StudentLessons from '../FeatureComponents/StudentLessons';\n\nconst StudentDashboard = () => {\n    \n    const useStyles = makeStyles(theme => ({\n        \n        studentNameWrapper: {\n            flex: 1\n        },\n        studentNameText: {\n            textAlign: \"center\"\n        },\n        paper: {\n            margin: 5,\n            textAlign: 'center',\n            height: 350,\n            borderRadius: 10,\n        },\n        cardsWrapper: {\n            width: \"90%\",\n            marginLeft: \"5%\",\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        cardContent: {\n            flex: 5,\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        cardAction: {\n            width: \"50%\",\n            marginLeft: \"25%\",\n            marginBottom: 10,\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"center\"\n        },\n        button: {\n            marginLeft: 5,\n            marginRight: 5\n        },\n        content: {\n            flexGrow: 1,\n            backgroundColor: theme.palette.background.default,\n            padding: theme.spacing(3),\n            marginTop: 50\n        }\n    }));\n    \n    const [auth, setAuth] = useState({empty: true});\n    const [current, setCurrent] = useState(0);\n    \n    useEffect(() => {\n        getAuth();\n    }, []);\n    \n    const getAuth = async () => {\n        \n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        \n        const response = await fetch(\"/accounts/auth?studentid=\" + urlParams.get('studentid'), {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        \n        const data = await response.json();\n        setAuth(data);\n        \n    }\n    \n    const classes = useStyles();\n    \n    if (auth.error !== undefined) {\n        return (\n            <div className=\"app\">\n            <Typography variant=\"h1\">Loading... (or you do not have a cookie)</Typography>\n            </div>\n        );\n    } else {\n            return (\n                <div className=\"App\">\n                <LeftDrawer changeState={setCurrent} />\n                <div className={classes.content}>\n                \n                <div className={classes.studentNameWrapper}>\n                <Typography variant=\"h1\">John Costa</Typography>\n                </div>\n                \n                {current === 0 ? <Dashboard /> : <div></div>}\n                {current === 1 ? <StudentLessons /> : <div></div>}\n                {current === 2 ? <Progress /> : <div></div>}\n                {current === 3 ? <PlanLesson /> : <div></div>}\n                {current === 4 ? <AddReport /> : <div></div>}\n\n                </div>\n                </div>\n                \n                );\n            }\n    }\n        export default StudentDashboard;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { grey, teal } from '@material-ui/core/colors';\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: teal,\n        secondary: grey,\n        cards: '#FFFFFF',\n        divBackground: \"#009688\",\n        leftNav: '#313131',\n        lightText: '#DDDDDD'\n      },\n    typography: {\n      fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      h1: {\n        fontSize: \"5em\",\n        color: grey[900]\n      },\n      h3: {\n        fontWeight: \"lighter\"\n      }\n    }\n});\nexport default theme;","import React from 'react';\nimport './App.css';\n//Pages\nimport Login from '../pages/Login';\nimport StudentDashboard from '../pages/StudentDashboard';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from '../../theme';\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Router>\n    <Switch>\n    <Route path=\"/login\" component={Login} />\n    <Route path=\"/studentdashboard\" component={StudentDashboard} />\n    </Switch>\n    </Router>\n    </ThemeProvider>\n    );\n  }\nexport default App;\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}